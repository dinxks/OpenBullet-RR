<Page x:Class="OpenBullet2.Native.Views.Pages.Proxies"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:OpenBullet2.Native.Views.Pages"
      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
      mc:Ignorable="d" 
      d:DesignHeight="550" d:DesignWidth="780"
      Title="Proxies">

    <Page.Resources>
        <ContextMenu x:Key="ItemContextMenu">
            <MenuItem x:Name="copySelectedProxies" Header="Copy Selected Proxies" Click="CopySelectedProxies"/>
            <MenuItem x:Name="copySelectedProxiesFull" Header="Copy Selected Proxies (with type and credentials)" Click="CopySelectedProxiesFull"/>
        </ContextMenu>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="40" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Button x:Name="addGroupButton" Click="AddGroup" Margin="0 5 5 5" Style="{StaticResource StyledSuccessButton}" >
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconMaterialDesign Kind="Add" />
                    <TextBlock VerticalAlignment="Center" Margin="5 0">Add Group</TextBlock>
                </StackPanel>
            </Button>
            <Button x:Name="editGroupButton" Click="EditGroup" Margin="0 5 5 5" Style="{StaticResource StyledPrimaryButton}" >
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconRemixIcon Kind="Edit2Fill" />
                    <TextBlock VerticalAlignment="Center" Margin="5 0">Edit Group</TextBlock>
                </StackPanel>
            </Button>
            <Button x:Name="deleteGroupButton" Click="DeleteGroup" Margin="0 5 5 5" Style="{StaticResource StyledDangerButton}" >
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconMaterial Kind="Close" />
                    <TextBlock VerticalAlignment="Center" Margin="5 0">Delete Group</TextBlock>
                </StackPanel>
            </Button>
            <Label VerticalAlignment="Center">Selected group:</Label>
            <ComboBox
                  Height="30"
                  ItemsSource="{Binding Path=ProxyGroupsCollection}"
                  DisplayMemberPath="Name"
                  SelectedValuePath="Id"
                  SelectedValue="{Binding Path=SelectedGroupId, Mode=TwoWay}" />
        </StackPanel>

        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <Button x:Name="importButton" Click="Import" Margin="0 5 5 5" Style="{StaticResource StyledSuccessButton}" >
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconUnicons Kind="Import" />
                    <TextBlock VerticalAlignment="Center" Margin="5 0">Import</TextBlock>
                </StackPanel>
            </Button>
            <Button x:Name="exportButton" Click="ExportSelected" Margin="0 5 5 5" Style="{StaticResource StyledPrimaryButton}" >
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconUnicons Kind="Export" />
                    <TextBlock VerticalAlignment="Center" Margin="5 0">Export</TextBlock>
                </StackPanel>
            </Button>
            <Button x:Name="deleteButton" Click="DeleteSelected" Margin="0 5 5 5" Style="{StaticResource StyledDangerButton}" >
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconMaterial Kind="Close" />
                    <TextBlock VerticalAlignment="Center" Margin="5 0">Delete</TextBlock>
                </StackPanel>
            </Button>
            <Button x:Name="deleteNotWorkingButton" Click="DeleteNotWorking" Margin="0 5 5 5" Style="{StaticResource StyledDangerButton}" ToolTip="Deletes not working proxies.">
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconMaterial Kind="Close" />
                    <TextBlock VerticalAlignment="Center" Margin="5 0">Delete Not Working</TextBlock>
                </StackPanel>
            </Button>
            <Button x:Name="deleteUntestedButton" Click="DeleteUntested" Margin="0 5 5 5" Style="{StaticResource StyledDangerButton}" ToolTip="Deletes proxies that haven't been tested.">
                <StackPanel Orientation="Horizontal">
                    <iconPacks:PackIconMaterial Kind="Close" />
                    <TextBlock VerticalAlignment="Center" Margin="5 0">Delete Untested</TextBlock>
                </StackPanel>
            </Button>
            <TextBlock FontWeight="Bold" VerticalAlignment="Center" Margin="10 0 0 0">Total:</TextBlock>
            <TextBlock Text="{Binding Total}" VerticalAlignment="Center" Margin="5 0 0 0" />
            <TextBlock FontWeight="Bold" Foreground="{DynamicResource ForegroundGood}" VerticalAlignment="Center" Margin="10 0 0 0">Working:</TextBlock>
            <TextBlock Text="{Binding Working}" Foreground="{DynamicResource ForegroundGood}" VerticalAlignment="Center" Margin="5 0 0 0" />
            <TextBlock FontWeight="Bold" Foreground="{DynamicResource ForegroundBad}" VerticalAlignment="Center" Margin="10 0 0 0">Not working:</TextBlock>
            <TextBlock Text="{Binding NotWorking}" Foreground="{DynamicResource ForegroundBad}" VerticalAlignment="Center" Margin="5 0 0 0" />
        </StackPanel>

        <ListView x:Name="proxiesListView" Grid.Column="0" Grid.Row="2" Foreground="{DynamicResource ForegroundMain}" Background="Transparent" ItemsSource="{Binding Path=ProxiesCollection}" SelectionMode="Extended" BorderThickness="1" VirtualizingPanel.IsVirtualizing="True" AllowDrop="True" Drop="ProxyListViewDrop">

            <!-- Show Headers by overriding the default style -->
            <ListView.Style>
                <Style TargetType="{x:Type ListView}" />
            </ListView.Style>

            <!-- Align Headers to the Left -->
            <ListView.Resources>
                <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
                    <Setter Property="Width" Value="18" />
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                        <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                                    <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Black" Offset="0" />
                                <GradientStop Color="White" Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="{x:Type GridViewColumnHeader}">
                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                <Grid>
                                    <Border BorderThickness="0,0,0,1" BorderBrush="Black" Background="Transparent">
                                        <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Left" />
                                    </Border>
                                    <Thumb x:Name="PART_HeaderGripper"
                                         HorizontalAlignment="Right"
                                         Margin="0,0,-9,0"
                                         Style="{StaticResource GridViewColumnHeaderGripper}" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="OverridesDefaultStyle" Value="True" />
                    <Setter Property="Foreground" Value="{DynamicResource ForegroundMain}" />
                    <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Century Gothic" />
                    <Setter Property="FontSize" Value="14" />
                </Style>
                <Style TargetType="{x:Type ListViewItem}">
                    <EventSetter Event="MouseRightButtonDown" Handler="ItemRightClick" />
                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}" 
                    Padding="0"
                    SnapsToDevicePixels="true">
                                    <GridViewRowPresenter 
                    HorizontalAlignment="Left" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundSecondary}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundSecondary}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>

            </ListView.Resources>

            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel>
                    </VirtualizingStackPanel>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>

            <ListView.View>
                <GridView>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Type}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Tag="Type" Click="ColumnHeaderClicked">Type</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Host}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Tag="Host" Click="ColumnHeaderClicked">Host</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Port}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Tag="Port" Click="ColumnHeaderClicked">Port</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Username}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Tag="Username" Click="ColumnHeaderClicked">Username</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Password}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Tag="Password" Click="ColumnHeaderClicked">Password</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Country}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Tag="Country" Click="ColumnHeaderClicked">Country</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Status}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Tag="Status" Click="ColumnHeaderClicked">Status</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=Ping}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Tag="Ping" Click="ColumnHeaderClicked">Ping</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Path=LastChecked}">
                        <GridViewColumn.Header>
                            <GridViewColumnHeader Tag="LastChecked" Click="ColumnHeaderClicked">Last Checked</GridViewColumnHeader>
                        </GridViewColumn.Header>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</Page>

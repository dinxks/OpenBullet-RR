@page "/configs"
@using RuriLib.Models.Configs
@implements IDisposable 
@inject Microsoft.Extensions.Localization.IStringLocalizer<Configs> Loc
@attribute [Authorize(Roles = "Admin")]

<div class="container-fluid">
    <div class="row mb-2">
        <div class="list-group list-group-horizontal">
            <button class="btn btn-sm btn-outline-success" @onclick="CreateConfig"><span class="oi oi-plus"></span> @Loc["New"]</button>
            <button class="btn btn-sm btn-outline-primary" @onclick="EditConfig"><span class="oi oi-pencil"></span> @Loc["Edit"]</button>
            <button class="btn btn-sm btn-outline-primary" @onclick="CloneConfig"><span class="oi oi-layers"></span> @Loc["Clone"]</button>
            <button class="btn btn-sm btn-outline-danger" @onclick="DeleteConfig"><span class="oi oi-x"></span> @Loc["Delete"]</button>
            <button class="btn btn-sm btn-outline-primary" @onclick="@(() => uploadDisplay = !uploadDisplay)">
                <span class="oi oi-data-transfer-upload"></span> @Loc["Upload"]
            </button>
            <button class="btn btn-sm btn-outline-primary" @onclick="DownloadConfig"><span class="oi oi-data-transfer-download"></span> @Loc["Download"]</button>
            <button class="btn btn-sm btn-outline-primary" @onclick="DownloadAll"><span class="oi oi-data-transfer-download"></span> @Loc["DownloadAll"]</button>
            <button class="btn btn-sm btn-outline-secondary" @onclick="ReloadConfigs"><span class="oi oi-reload"></span> @Loc["Reload"]</button>
            <button class="btn btn-sm btn-outline-success" @onclick="ToggleView"><span class="oi oi-wrench"></span> @Loc["ToggleView"]</button>
        </div>
    </div>
    @if (uploadDisplay)
    {
        <div class="row">
            <InputFile OnChange="@ProcessUploadedConfigs" multiple />
        </div>
    }

    <div class="row mt-4 fg-secondary">
        <div class="col px-0">
            <span>@Loc["ConfigWarningMessage"]</span>
        </div>
    </div>

    @if (VolatileSettings.ConfigsDetailedView)
    {
        <div class="row">
            <div class="w-100">
                @if (gridLoad != null && !gridLoad.IsCanceled && gridLoad.IsCompleted)
                {
                    <GridComponent @ref="gridComponent" T="Config" Grid="@grid" OnRowClicked="@OnConfigSelected"></GridComponent>
                }
                else
                {
                    <p><em>@Loc["Loading"]...</em></p>
                }
            </div>
        </div>
        
        @if (selectedConfig != null)
        {
            <div class="row mt-3 overflow-auto" style="height: 250px;">
                <div class="w-100">
                    <MarkdownRenderer MarkdownContent="@selectedConfig.Readme" />
                </div>
            </div>
        }
    }
    else
    {
        @if (configs.Any(c => c.IsRemote))
        {
            <div class="row mt-3">
                <h5>@Loc["LocalConfigs"]</h5>
            </div>
        }
        <div class="row config-list">
            <RadzenDataList WrapItems="true" AllowPaging="true" Data="@configs.Where(c => !c.IsRemote)" TItem="Config" PageSize="36">
                <Template Context="config">
                    <RadzenCard Style="width:130px; max-width: 130px;">
                        <div class="@(config == selectedConfig ? "config-item" : "config-item-transparent")"
                             @onclick="@(() => SelectConfig(config))" @ondblclick="EditConfig">
                            <div class="row">
                                <div style="margin: 0 auto;">
                                    <img src="data:image/png;base64,@config.Metadata.Base64Image" style="width: 80px; height:80px;" />
                                </div>
                            </div>
                            <div class="row mt-3">
                                <span class="text-center fg-custom margin-left: 5px;margin-right: 5px;"
                                      style="width: 100%; font-size: 16px;">@config.Metadata.Name</span>
                                </div>
                                <div class="row">
                                    <span class="text-center" style="width: 100%; font-size: 14px;">@Loc["by"] @config.Metadata.Author</span>
                                </div>
                                <div class="row">
                                    <span class="text-center" style="width: 100%; font-size: 14px;">@config.Metadata.LastModified.ToString("dd MMM yyyy")</span>
                                </div>
                            </div>
                        </RadzenCard>
                    </Template>
                </RadzenDataList>
            </div>
            @if (configs.Any(c => c.IsRemote))
            {
                <div class="row">
                    <h5>@Loc["RemoteConfigs"]</h5>
                </div>
                <div class="row config-list">
                    <RadzenDataList WrapItems="true" AllowPaging="true" Data="@configs.Where(c => c.IsRemote)" TItem="Config" PageSize="36">
                        <Template Context="config">
                            <RadzenCard Style="width:130px; max-width: 130px;">
                                <div class="@(config == selectedConfig ? "config-item" : "config-item-transparent")"
                                     @onclick="@(() => SelectConfig(config))" @ondblclick="EditConfig">
                                    <div class="row">
                                        <div style="margin: 0 auto;">
                                            <img src="data:image/png;base64,@config.Metadata.Base64Image" style="width: 80px; height:80px;" />
                                        </div>
                                    </div>
                                    <div class="row mt-3">
                                        <span class="text-center fg-custom margin-left: 5px;margin-right: 5px;"
                                              style="width: 100%; font-size: 16px;">@config.Metadata.Name</span>
                                        </div>
                                        <div class="row">
                                            <span class="text-center" style="width: 100%; font-size: 14px;">@Loc["by"] @config.Metadata.Author</span>
                                        </div>
                                        <div class="row">
                                            <span class="text-center" style="width: 100%; font-size: 14px;">@config.Metadata.LastModified.ToString("dd MMM yyyy")</span>
                                        </div>
                                    </div>
                                </RadzenCard>
                            </Template>
                        </RadzenDataList>
                    </div>
                }
        }
</div>

<hr />
<BullettaHelp Title="@help1x00" Messages="new string[] { help1x01, help1x02 }" /><br />
<BullettaHelp Title="@help2x00" Messages="new string[] { help2x01, help2x02 }" /><br />
<BullettaHelp Title="@help3x00" Messages="new string[] { help3x01, help3x02 }" /><br />
<br />

@code {
    private bool uploadDisplay = false;

    private string help1x00 => Loc["Help1x00"];
    private string help1x01 => Loc["Help1x01"];
    private string help1x02 => Loc["Help1x02"];

    private string help2x00 => Loc["Help2x00"];
    private string help2x01 => Loc["Help2x01"];
    private string help2x02 => Loc["Help2x02"];

    private string help3x00 => Loc["Help3x00"];
    private string help3x01 => Loc["Help3x01"];
    private string help3x02 => Loc["Help3x02"];
}

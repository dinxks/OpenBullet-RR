@page "/settings/openbullet"
@using OpenBullet2.Core.Models.Settings
@inject Microsoft.Extensions.Localization.IStringLocalizer<OBSettings> Loc
@attribute [Authorize(Roles = "Admin")]

<audio id="hit-sound" src="/sounds/hit.wav" />
<button class="btn btn-outline-success" style="margin: 10px 0;" @onclick="Save">@Loc["Save"]</button>
<button class="btn btn-outline-warning" style="margin: 10px 0;" @onclick="RestoreDefaults">@Loc["RestoreDefaults"]</button>

<h1>@Loc["General"]</h1>
<EditForm Model="settings.GeneralSettings">

    <label>@Loc["NavigateOnEdit"]</label>
    <InputSelect @bind-Value="settings.GeneralSettings.ConfigSectionOnLoad">
        @foreach (var sect in Enum.GetNames(typeof(ConfigSection)))
        {
            <option value="@sect">@sect</option>
        }
    </InputSelect>
    <br />

    <label>@Loc["AutoSetRecommendedBots"]</label>
    <InputCheckbox class="mb-3" @bind-Value="settings.GeneralSettings.AutoSetRecommendedBots" />
    <br />

    <label>@Loc["WarnConfigNotSaved"]</label>
    <InputCheckbox class="mb-3" @bind-Value="settings.GeneralSettings.WarnConfigNotSaved" />
    <br />

    <label>@Loc["DefaultAuthor"]</label>
    <InputText class="mb-3" @bind-Value="settings.GeneralSettings.DefaultAuthor" />

    <label>@Loc["EnableJobLogging"]</label>
    <InputCheckbox class="mb-3" @bind-Value="settings.GeneralSettings.EnableJobLogging" />
    <br />

    <label>@Loc["LogMaxEntries"]</label>
    <InputNumber class="mb-3" @bind-Value="settings.GeneralSettings.LogBufferSize" />

    <label>@Loc["JobManagerUpdateInterval"]</label>
    <InputNumber class="mb-3" @bind-Value="settings.GeneralSettings.JobManagerUpdateInterval" />
    <br />

    <label>@Loc["JobUpdateInterval"]</label>
    <InputNumber class="mb-3" @bind-Value="settings.GeneralSettings.JobUpdateInterval" />
    <br />

    <label>@Loc["DefaultJobDisplayMode"]</label>
    <InputSelect @bind-Value="settings.GeneralSettings.DefaultJobDisplayMode">
        @foreach (var mode in Enum.GetNames(typeof(JobDisplayMode)))
        {
            <option value="@mode">@mode</option>
        }
    </InputSelect>
    <br />

    <label>@Loc["GroupCapturesInDebugger"]</label>
    <InputCheckbox class="mb-3" @bind-Value="settings.GeneralSettings.GroupCapturesInDebugger" />
    <br />

    <!-- Maybe move this to the actual relevant page -->
    <label>@Loc["IgnoreWordlistNameOnHitsDedupe"]</label>
    <InputCheckbox class="mb-3" @bind-Value="settings.GeneralSettings.IgnoreWordlistNameOnHitsDedupe" />
    <br />

    <label class="fg-custom font-weight-bold">@Loc["ProxyCheckTargets"]</label>
    <br />
    <p>@Loc["ProxyCheckTargetsDescription"]</p>
    <div class="list-group list-group-horizontal">
        <button type="button" class="btn btn-sm btn-outline-success" @onclick="@(() => settings.GeneralSettings.ProxyCheckTargets.Add(new ProxyCheckTarget()))">
            <span class="oi oi-plus"></span> @Loc["Add"]
        </button>
        <button type="button" class="btn btn-sm btn-outline-danger"
                @onclick="@(() => settings.GeneralSettings.ProxyCheckTargets.Clear())">
            <span class="oi oi-x"></span> @Loc["Clear"]
        </button>
    </div>
    <div class="container-fluid" style="margin-top: 15px;">
        @foreach (var input in settings.GeneralSettings.ProxyCheckTargets)
        {
            <div class="row">
                <div class="col-auto px-1 px-md-2">
                    <label style="line-height: 30px;">@Loc["URL"]</label>
                </div>
                <div class="col align-self-stretch px-1 px-md-2">
                    <InputText @bind-Value="input.Url" />
                </div>
                <div class="col-auto px-1 px-md-2">
                    <label style="line-height: 30px;">@Loc["SuccessKey"]</label>
                </div>
                <div class="col align-self-stretch px-1 px-md-2">
                    <InputText @bind-Value="input.SuccessKey" />
                </div>
                <div class="col-auto px-1 px-md-2">
                    <button type="button" class="btn btn-sm btn-outline-danger" @onclick="@(() => settings.GeneralSettings.ProxyCheckTargets.Remove(input))">
                        <span class="oi oi-x"></span>
                    </button>
                </div>
            </div>
        }
    </div>

    <label class="fg-custom font-weight-bold">@Loc["CustomSnippets"]</label>
    <br />
    <p>@Loc["CustomSnippetsDescription"]</p>
    <div class="list-group list-group-horizontal">
        <button type="button" class="btn btn-sm btn-outline-success" @onclick="@(() => settings.GeneralSettings.CustomSnippets.Add(new CustomSnippet()))">
            <span class="oi oi-plus"></span> @Loc["Add"]
        </button>
        <button type="button" class="btn btn-sm btn-outline-danger"
                @onclick="@(() => settings.GeneralSettings.CustomSnippets.Clear())">
            <span class="oi oi-x"></span> @Loc["Clear"]
        </button>
    </div>
    <div class="container-fluid" style="margin-top: 15px;">
        @foreach (var snippet in settings.GeneralSettings.CustomSnippets)
        {
            <div class="row">
                <div class="col-auto px-1 px-md-2">
                    <label style="line-height: 30px;">@Loc["Name"]</label>
                </div>
                <div class="col align-self-stretch px-1 px-md-2">
                    <InputText @bind-Value="snippet.Name" />
                </div>
                <div class="col-auto px-1 px-md-2">
                    <button type="button" class="btn btn-sm btn-outline-danger" @onclick="@(() => settings.GeneralSettings.CustomSnippets.Remove(snippet))">
                        <span class="oi oi-x"></span>
                    </button>
                </div>
            </div>
            <div class="row">
                <div class="col-auto px-1 px-md-2">
                    <label style="line-height: 30px;">@Loc["Description"]</label>
                </div>
                <div class="col align-self-stretch px-1 px-md-2">
                    <InputText @bind-Value="snippet.Description" />
                </div>
            </div>
            <div class="row">
                <div class="col align-self-stretch px-1 px-md-2">
                    <InputTextArea @bind-Value="snippet.Body" />
                </div>
            </div>
        }
    </div>

</EditForm>

<h1>@Loc["Security"]</h1>
<EditForm Model="settings.SecuritySettings">

    <label>@Loc["AllowSystemWideFileAccess"]</label>
    <InputCheckbox class="mb-3" @bind-Value="settings.SecuritySettings.AllowSystemWideFileAccess" />
    <br />

    <label>@Loc["RequireAdminLogin"]</label>
    <InputCheckbox class="mb-3" @bind-Value="settings.SecuritySettings.RequireAdminLogin" />
    <br />

    <label>@Loc["AdminUsername"]</label>
    <InputText class="mb-3" @bind-Value="settings.SecuritySettings.AdminUsername" />
    <button class="btn btn-sm btn-outline-primary" @onclick="ChangePassword">@Loc["ChangePassword"]</button>
    <br />
    <br />

    <label>@Loc["AdminSessionLifetimeHours"]</label>
    <InputNumber class="mb-3" @bind-Value="settings.SecuritySettings.AdminSessionLifetimeHours" />

    <label>@Loc["GuestSessionLifetimeHours"]</label>
    <InputNumber class="mb-3" @bind-Value="settings.SecuritySettings.GuestSessionLifetimeHours" />

</EditForm>

<h1>@Loc["Remote"]</h1>
<EditForm Model="settings.RemoteSettings">
    <label class="fg-custom font-weight-bold">@Loc["RemoteConfigsEndpoints"]</label>
    <br />
    <p>@Loc["RemoteConfigsEndpointsDescription"]</p>
    <div class="list-group list-group-horizontal">
        <button type="button" class="btn btn-sm btn-outline-success" @onclick="@(() => settings.RemoteSettings.ConfigsEndpoints.Add(new RemoteConfigsEndpoint()))">
            <span class="oi oi-plus"></span> @Loc["Add"]
        </button>
        <button type="button" class="btn btn-sm btn-outline-danger"
                @onclick="@(() => settings.RemoteSettings.ConfigsEndpoints.Clear())">
            <span class="oi oi-x"></span> @Loc["Clear"]
        </button>
    </div>
    <div class="container-fluid" style="margin-top: 15px;">
        @foreach (var endpoint in settings.RemoteSettings.ConfigsEndpoints)
        {
            <div class="row">
                <div class="col-auto px-1 px-md-2">
                    <label style="line-height: 30px;">@Loc["URL"]</label>
                </div>
                <div class="col align-self-stretch px-1 px-md-2">
                    <InputText @bind-Value="endpoint.Url" />
                </div>
                <div class="col-auto px-1 px-md-2">
                    <label style="line-height: 30px;">@Loc["ApiKey"]</label>
                </div>
                <div class="col align-self-stretch px-1 px-md-2">
                    <InputText @bind-Value="endpoint.ApiKey" />
                </div>
                <div class="col-auto px-1 px-md-2">
                    <button type="button" class="btn btn-sm btn-outline-danger" @onclick="@(() => settings.RemoteSettings.ConfigsEndpoints.Remove(endpoint))">
                        <span class="oi oi-x"></span></button>
                </div>
            </div>
        }
    </div>
</EditForm>

<h1>@Loc["Customization"]</h1>
<EditForm Model="settings.CustomizationSettings">
    <label>@Loc["Theme"]</label>
    <InputSelect ValueExpression="(() => settings.CustomizationSettings.Theme)"
                 Value="settings.CustomizationSettings.Theme"
                 ValueChanged="(string value) => OnThemeChanged(value)">
        <option value="Default">Default</option>
        @foreach (var theme in availableThemes)
        {
            <option value="@theme">@theme</option>
        }
    </InputSelect>
    <br />

    <label>@Loc["MonacoTheme"]</label>
    <InputSelect @bind-Value="settings.CustomizationSettings.MonacoTheme">
        <option value="vs-dark">Visual Studio (Dark)</option>
        <option value="vs">Visual Studio</option>
        <option value="hc-black">High Contrast (Dark)</option>
    </InputSelect>
    <br />

    <label>@Loc["EnableWordWrap"]</label>
    <InputCheckbox class="mb-3" @bind-Value="settings.CustomizationSettings.WordWrap" />
    <br />

    <label>@Loc["UploadTheme"]</label>
    <InputFile OnChange="@ProcessUploadedTheme"/>
    <br />

    <label>@Loc["PlaySoundOnHit"]</label>
    <InputCheckbox @bind-Value="settings.CustomizationSettings.PlaySoundOnHit"/>
    <span class="cursor oi oi-volume-high" @onclick="PlayHitSound"></span>
</EditForm>

<button class="btn btn-outline-success" style="margin: 10px 0;" @onclick="Save">@Loc["Save"]</button>
<button class="btn btn-outline-warning" style="margin: 10px 0;" @onclick="RestoreDefaults">@Loc["RestoreDefaults"]</button>
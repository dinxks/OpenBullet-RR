@using RuriLib.Models.Variables
@using RuriLib.Models.Debugger
@inject Microsoft.Extensions.Localization.IStringLocalizer<Debugger> Loc

<div class="container-fluid my-3">
    <div class="row">
        <div class="list-group list-group-horizontal mb-3">
            @if (debugger is null || debugger.Status is ConfigDebuggerStatus.Idle)
            {
                <button class="btn btn-sm btn-outline-success" @onclick="Run"><span class="oi oi-media-play"></span> @Loc["Start"]</button>
            }
            @if (debugger is not null && debugger.Status is ConfigDebuggerStatus.WaitingForStep)
            {
                <button class="btn btn-sm btn-outline-primary" @onclick="TakeStep"><span class="oi oi-arrow-thick-right"></span> @Loc["TakeStep"]</button>
            }
            @if (debugger is not null && debugger.Status is ConfigDebuggerStatus.Running or ConfigDebuggerStatus.WaitingForStep)
            {
                <button class="btn btn-sm btn-outline-danger" @onclick="Stop"><span class="oi oi-media-stop"></span> @Loc["Stop"]</button>
            }
            @if (showVariables)
            {
                <button class="btn btn-sm btn-outline-primary" @onclick="ToggleView">@Loc["ShowLog"]</button>
            }
            else
            {
                <button class="btn btn-sm btn-outline-primary" @onclick="ToggleView">@Loc["ShowVariables"]</button>
            }
        </div>
    </div>
    <EditForm Model="options">
        <div class="row">
            <div class="col-auto pl-0 ml-0">
                <label>SBS</label>
                <InputCheckbox @bind-Value="options.StepByStep" />
            </div>
            <div class="col-auto pl-0 ml-0">
                <label>@Loc["TestData"]</label>
            </div>
            <div class="col align-self-stretch px-0">
                <InputText @bind-Value="options.TestData" />
            </div>
            <div class="col-auto">
                <label>@Loc["WordlistType"]</label>
                <InputSelect @bind-Value="options.WordlistType">
                    @foreach (var name in RuriLibSettings.Environment.WordlistTypes.Select(w => w.Name))
                    {
                        <option value="@name">@name</option>
                    }
                </InputSelect>
                <label class="ml-2">@Loc["PersistLog"]</label>
                <InputCheckbox @bind-Value="options.PersistLog" />
            </div>
        </div>
        <div class="row">
            <div class="col-auto pl-0 ml-0">
                <label>@Loc["UseProxy"]</label>
                <InputCheckbox @bind-Value="options.UseProxy" />
                <label class="ml-2">@Loc["TestProxy"]</label>
            </div>
            <div class="col align-self-stretch px-0">
                <InputText @bind-Value="options.TestProxy" />
            </div>
            <div class="col-auto">
                <label>@Loc["Type"]</label>
                <InputSelect @bind-Value="options.ProxyType">
                    @foreach (var name in Enum.GetNames(typeof(RuriLib.Models.Proxies.ProxyType)))
                    {
                        <option value="@name">@name</option>
                    }
                </InputSelect>
            </div>
        </div>
    </EditForm>
    <div class="row">
        <div class="col-12 pl-0 ml-0" style="font-size: 13px;">
            @if (!showVariables)
            {
                <BotLoggerViewer BotLogger="logger" @ref="loggerViewer" />
            }
            else
            {
                <VariablesViewer @ref="variablesViewer" />
            }
        </div>
    </div>
</div>

@using RuriLib.Models.Variables
@inject VolatileSettingsService VolatileSettings
@inject OpenBulletSettingsService OBSettingsService 
@inject Microsoft.Extensions.Localization.IStringLocalizer<VariablesViewer> Loc

<h5>@Loc["Variables"]</h5>
<div class="debugger-log">
    @if (OBSettingsService.Settings.GeneralSettings.GroupCapturesInDebugger)
    {
        @foreach (var variable in variables.Where(v => !v.MarkedForCapture))
        {
            <p style="color: yellow">
                @variable.Name (@variable.Type) = @variable.AsString()
            </p>
        }
        @foreach (var variable in variables.Where(v => v.MarkedForCapture))
        {
            <p style="color: tomato">
                @variable.Name (@variable.Type) = @variable.AsString()
            </p>
        }
    }
    else
    {
        @foreach (var variable in variables)
        {
            <p style="color: @(variable.MarkedForCapture ? "tomato" : "yellow");">
                @variable.Name (@variable.Type) = @variable.AsString()
            </p>
        }
    }
</div>

@code {
    private List<Variable> variables;

    protected override void OnInitialized()
    {
        variables = VolatileSettings.DebuggerOptions.Variables;
    }

    public void Refresh()
    {
        StateHasChanged();
    }
}
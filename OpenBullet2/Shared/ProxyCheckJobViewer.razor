@using RuriLib.Models.Jobs
@using RuriLib.Models.Jobs.StartConditions 
@using System.Globalization
@implements IDisposable
@inject Microsoft.Extensions.Localization.IStringLocalizer<ProxyCheckJobViewer> Loc

<div class="proxycheck-options-overview mb-3">
    <!-- Job Options -->
    <p class="fg-custom"><b>@Loc["JobOptions"]</b></p>

    <!-- Url -->
    <span><b>@Loc["Url"]: </b>@Job.Url</span>
    <br />

    <!-- Success Key -->
    <span><b>@Loc["SuccessKey"]: </b>@Job.SuccessKey</span>
    <br />

    <!-- Url -->
    <span><b>@Loc["CheckOnlyUntested"]: </b>@Job.CheckOnlyUntested</span>
    <br />

    <!-- Url -->
    <span><b>@Loc["TimeoutMilliseconds"]: </b>@Job.Timeout.TotalMilliseconds</span>
    <br />

    <!-- Bots -->
    <span class="mr-2"><b>@Loc["Bots"]: </b>@Job.Bots</span>
    @if (!changingBots)
    {
        <span class="oi oi-pencil" style="cursor: pointer;" @onclick="ChangeBots"></span>
    }
    else
    {
        <span><i>@Loc["ChangingPleaseWait"]</i></span>
    }
    <br />

    <!-- Change Options Button -->
    @if (Job.Status == JobStatus.Idle)
    {
        <button class="btn btn-sm btn-outline-primary mt-1" type="button" @onclick="ChangeOptions">@Loc["Change"]</button>
    }
</div>

<p style="color: orange;"><b>@Loc["Controls"]</b></p>
<div class="list-group list-group-horizontal">
    @switch (Job.Status)
    {
        case JobStatus.Idle:
            <button class="btn btn-sm btn-outline-success" @onclick="Start"><span class="oi oi-media-play"></span> @Loc["Start"]</button>
            break;

        case JobStatus.Waiting:
            <span class="mr-3">@Loc["Waiting"]...  @Loc["TimeLeft"]:</span>
            @if (Job.StartCondition.Verify(Job)) // If already verified and about to start
            {
                <span>00:00:00</span>
            }
            else // Otherwise display actual wait
            {
                @switch (Job.StartCondition)
                {
                    case RelativeTimeStartCondition x:
                        <span>@(((Job.StartTime + x.StartAfter) - DateTime.Now).ToString(@"hh\:mm\:ss"))</span>
                        break;

                    case AbsoluteTimeStartCondition x:
                        <span>@((x.StartAt - DateTime.Now).ToString(@"hh\:mm\:ss"))</span>
                        break;
                }
            }
            break;

        case JobStatus.Paused:
            <button class="btn btn-sm btn-outline-success" @onclick="Resume"><span class="oi oi-media-play"></span> @Loc["Resume"]</button>
            <button class="btn btn-sm btn-outline-danger" @onclick="Stop"><span class="oi oi-media-stop"></span> @Loc["Stop"]</button>
            <button class="btn btn-sm btn-outline-danger" @onclick="Abort"><span class="oi oi-x"></span> @Loc["Abort"]</button>
            break;

        case JobStatus.Running:
            <button class="btn btn-sm btn-outline-warning" @onclick="Pause"><span class="oi oi-media-pause"></span> @Loc["Pause"]</button>
            <button class="btn btn-sm btn-outline-danger" @onclick="Stop"><span class="oi oi-media-stop"></span> @Loc["Stop"]</button>
            <button class="btn btn-sm btn-outline-danger" @onclick="Abort"><span class="oi oi-x"></span> @Loc["Abort"]</button>
            break;

        case JobStatus.Pausing:
            <span style="line-height: 30px; margin-top: 5px;"><i>@Loc["PausingMessage"]</i></span>
            <button class="btn btn-sm btn-outline-danger" @onclick="Abort"><span class="oi oi-x"></span> @Loc["Abort"]</button>
            break;

        case JobStatus.Stopping:
            <span style="line-height: 30px; margin-top: 5px;"><i>@Loc["StoppingMessage"]</i></span>
            <button class="btn btn-sm btn-outline-danger" @onclick="Abort"><span class="oi oi-x"></span> @Loc["Abort"]</button>
            break;
    }
</div>

@if (Job.Progress >= 0)
{
    <div class="progress mt-3">
        <div class="progress-bar" role="progressbar"
            style="width: @((Job.Progress * 100).ToString("0", CultureInfo.InvariantCulture))%"></div>
    </div>
}

<div class="container-fluid pl-0 pr-0 mt-3 mb-3">
    <div class="row">
        <div class="col">
            <span class="font-weight-bold" style="text-decoration: underline;">@Loc["ProxyStats"]</span><br /><br />
            <span class="font-weight-bold">@Loc["Total"]: </span><span>@Job.Total</span><br />
            <span class="font-weight-bold">@Loc["Tested"]: </span><span>@Job.Tested</span><br />
            <span class="font-weight-bold fg-hit">@Loc["Working"]: </span><span class="fg-hit">@Job.Working</span><br />
            <span class="font-weight-bold fg-fail">@Loc["NotWorking"]: </span><span class="fg-fail">@Job.NotWorking</span><br />
        </div>
        @if (Job.Progress >= 0)
        {
            <div class="col">
                <span class="font-weight-bold" style="text-decoration: underline;">@Loc["OtherStats"]</span><br /><br />
                <span class="font-weight-bold">@Loc["CPM"]: </span><span>@Job.CPM</span><br />
                <span class="font-weight-bold">@Loc["Elapsed"]: </span><span>@((int)Job.Elapsed.TotalDays) @Loc["days"] @Job.Elapsed.ToString(@"hh\:mm\:ss")</span><br />
                <span class="font-weight-bold">@Loc["Remaining"]: </span><span>@((int)Job.Remaining.TotalDays) @Loc["days"] @Job.Remaining.ToString(@"hh\:mm\:ss")</span><br />
                <span class="font-weight-bold">@Loc["Progress"]: </span><span> @Job.Tested / @Job.Total (@((Job.Progress * 100).ToString("0.00"))%)</span>
            </div>
        }
        else
        {
            <div class="col">
                <span class="font-weight-bold" style="text-decoration: underline;">@Loc["OtherStats"]</span><br /><br />
                <span class="font-weight-bold">@Loc["CPM"]: </span><span>-</span><br />
                <span class="font-weight-bold">@Loc["Elapsed"]: </span><span>-</span><br />
                <span class="font-weight-bold">@Loc["Remaining"]: </span><span>-</span><br />
                <span class="font-weight-bold">@Loc["Progress"]: </span><span>-</span><br />
            </div>
        }
    </div>
</div>

@if (Job.GeoProvider != null && Job.GeoProvider is OpenBullet2.Core.Models.Proxies.DBIPProxyGeolocationProvider)
{
    <div class="mb-2">
        <a href='https://db-ip.com'>IP Geolocation by DB-IP</a>
    </div>
}

<GenericLogger JobId="Job.Id" />
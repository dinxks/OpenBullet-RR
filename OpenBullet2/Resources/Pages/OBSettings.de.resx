<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Hinzufügen</value>
  </data>
  <data name="AdminSessionLifetimeHours" xml:space="preserve">
    <value>Gültigkeitsdauer der Admin-Sitzung (Stunden)</value>
  </data>
  <data name="AdminUsername" xml:space="preserve">
    <value>Admin Benutzername</value>
  </data>
  <data name="AllDone" xml:space="preserve">
    <value>Alles erledigt</value>
  </data>
  <data name="AllowSystemWideFileAccess" xml:space="preserve">
    <value>Systemweiten Dateizugriff erlauben</value>
  </data>
  <data name="ApiKey" xml:space="preserve">
    <value>Api Key</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Wirklich sicher?</value>
  </data>
  <data name="AutoSetRecommendedBots" xml:space="preserve">
    <value>Automatisch empfohlene Bot Anzahl einstellen, wenn eine Config auf der Seite zur Joberstellung ausgewählt wird</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Passwort ändern</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="Customization" xml:space="preserve">
    <value>Personalisierung</value>
  </data>
  <data name="DefaultAuthor" xml:space="preserve">
    <value>Standardautor bei neu erstellten Configs</value>
  </data>
  <data name="DefaultJobDisplayMode" xml:space="preserve">
    <value>Standard-Anzeigemodus für Jobs</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Erledigt</value>
  </data>
  <data name="EnableJobLogging" xml:space="preserve">
    <value>Protokoll in der Jobansicht einschalten</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>Allgemein</value>
  </data>
  <data name="GroupCapturesInDebugger" xml:space="preserve">
    <value>Captures im Debugger gruppieren</value>
  </data>
  <data name="GuestSessionLifetimeHours" xml:space="preserve">
    <value>Gültigkeitsdauer der Gast-Sitzung (Stunden)</value>
  </data>
  <data name="IgnoreWordlistNameOnHitsDedupe" xml:space="preserve">
    <value>Den Wordlist Namen beim Entfernen der Duplikate in den Treffern ignorieren</value>
  </data>
  <data name="JobManagerUpdateInterval" xml:space="preserve">
    <value>Job Manager Aktualisierungsintervall</value>
  </data>
  <data name="JobUpdateInterval" xml:space="preserve">
    <value>Job Aktualisierungsintervall</value>
  </data>
  <data name="LogMaxEntries" xml:space="preserve">
    <value>Maximale Anzahl von Einträgen im Protokoll</value>
  </data>
  <data name="LogToFile" xml:space="preserve">
    <value>Auch in eine Datei protokollieren</value>
  </data>
  <data name="MonacoTheme" xml:space="preserve">
    <value>Monaco Editor Theme</value>
  </data>
  <data name="NavigateOnEdit" xml:space="preserve">
    <value>Wenn eine Konfiguration bearbeitet wird, zu ... wechseln</value>
  </data>
  <data name="NewAdminPassword" xml:space="preserve">
    <value>Neues Administrator-Passwort</value>
  </data>
  <data name="NewPasswordSet" xml:space="preserve">
    <value>Das neue Passwort wurde gesetzt!</value>
  </data>
  <data name="PlaySoundOnHit" xml:space="preserve">
    <value>Sound bei Treffer abspielen</value>
  </data>
  <data name="ProxyCheckTargets" xml:space="preserve">
    <value>Proxy-Check-Ziele</value>
  </data>
  <data name="ProxyCheckTargetsDescription" xml:space="preserve">
    <value>Dies sind die Proxy-Ziele, die in einem Proxy-Check-Job verfügbar sind. Die Proxies werden gegen die Ziel-URL geprüft, und wenn der Success Key in der heruntergeladenen Quelle gefunden wird, wird der Proxy als funktionsfähig markiert.</value>
  </data>
  <data name="Remote" xml:space="preserve">
    <value>Remote</value>
  </data>
  <data name="RemoteConfigsEndpoints" xml:space="preserve">
    <value>Endpunkte für Remote Konfigurationen</value>
  </data>
  <data name="RemoteConfigsEndpointsDescription" xml:space="preserve">
    <value>Dies sind die Remote-Endpunkte, die beim Neuladen des Konfigurations-Repositorys abgefragt werden, um Konfigurationen zu erhalten, die auf einem anderen Rechner gehostet werden.</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Entfernen</value>
  </data>
  <data name="RequireAdminLogin" xml:space="preserve">
    <value>Admin-Login erforderlich</value>
  </data>
  <data name="RestoreDefaults" xml:space="preserve">
    <value>Standardwerte wiederherstellen</value>
  </data>
  <data name="RestoreDefaultSettingsConfirmation" xml:space="preserve">
    <value>Standardeinstellungen wirklich wiederherstellen?</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Speichern</value>
  </data>
  <data name="Saved" xml:space="preserve">
    <value>Gespeichert</value>
  </data>
  <data name="Security" xml:space="preserve">
    <value>Sicherheit</value>
  </data>
  <data name="SettingsSaved" xml:space="preserve">
    <value>Die Einstellungen wurden erfolgreich gespeichert.</value>
  </data>
  <data name="SuccessKey" xml:space="preserve">
    <value>Success Key</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="ThemeSuccessfullyUploaded" xml:space="preserve">
    <value>Theme erfolgreich hochgeladen</value>
  </data>
  <data name="UnsupportedThemeFormat" xml:space="preserve">
    <value>Nicht unterstütztes Theme Dateiformat. Unterstützte Formate: .css, .zip</value>
  </data>
  <data name="UploadTheme" xml:space="preserve">
    <value>Theme hochladen</value>
  </data>
  <data name="URL" xml:space="preserve">
    <value>URL</value>
  </data>
  <data name="WarnConfigNotSaved" xml:space="preserve">
    <value>Eine Warnung anzeigen, wenn die aktuell geladene Config nicht gespeichert wurde und eine andere geladen wird</value>
  </data>
</root>
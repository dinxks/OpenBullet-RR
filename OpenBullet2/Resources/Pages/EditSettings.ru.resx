<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Добавить</value>
  </data>
  <data name="AddBlank" xml:space="preserve">
    <value>Добавить пустоту</value>
  </data>
  <data name="AllowedProxyTypes" xml:space="preserve">
    <value>Разрешенные типы прокси</value>
  </data>
  <data name="AllowedWordlistTypes" xml:space="preserve">
    <value>Разрешенные типы списков слов</value>
  </data>
  <data name="AlwaysOpenBrowser" xml:space="preserve">
    <value>Всегда открывайте браузер в самом начале</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Вы уверены?</value>
  </data>
  <data name="BanLoopEvasion" xml:space="preserve">
    <value>Уклонение от цикла запрета a.k.a. после скольких статусов BAN линия данных должна быть помечена как TOCHECK и прокси должен быть запрещен (0 - запретить).</value>
  </data>
  <data name="BanStatuses" xml:space="preserve">
    <value>Запретить прокси, когда бот завершает работу с одним из этих статусов</value>
  </data>
  <data name="BlockedUrls" xml:space="preserve">
    <value>Заблокированные URL-адреса</value>
  </data>
  <data name="BlockedUrlsInfo" xml:space="preserve">
    <value>Если URL ресурса содержит любой из заданных текстов, он не будет загружен. Нечувствительность к регистру.</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="CaseSensitive" xml:space="preserve">
    <value>С учетом регистра</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Очистить</value>
  </data>
  <data name="ContinueStopStatuses" xml:space="preserve">
    <value>Статусы, для которых бот будет продолжать / останавливаться</value>
  </data>
  <data name="CPMLimit" xml:space="preserve">
    <value>Ограничение CPM (0 - без ограничения)</value>
  </data>
  <data name="CustomInputs" xml:space="preserve">
    <value>Пользовательские входы</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>Данные</value>
  </data>
  <data name="DataRules" xml:space="preserve">
    <value>Правила работы с данными</value>
  </data>
  <data name="DefaultAnswer" xml:space="preserve">
    <value>Ответ по умолчанию</value>
  </data>
  <data name="DisableWebpagesNotifications" xml:space="preserve">
    <value>Отключение уведомлений с веб-страниц</value>
  </data>
  <data name="DismissDialogs" xml:space="preserve">
    <value>Отказ от диалоговых окон</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>Общий</value>
  </data>
  <data name="Headless" xml:space="preserve">
    <value>Безголовый</value>
  </data>
  <data name="IgnoreEmptyLines" xml:space="preserve">
    <value>Игнорировать пустые строки</value>
  </data>
  <data name="IgnoreHttpsErrors" xml:space="preserve">
    <value>Игнорировать ошибки HTTPS</value>
  </data>
  <data name="IgnoreResponseErrors" xml:space="preserve">
    <value>Игнорировать ошибки ответа</value>
  </data>
  <data name="InputDescription" xml:space="preserve">
    <value>Описание (вопрос для пользователя)</value>
  </data>
  <data name="Inputs" xml:space="preserve">
    <value>Входы</value>
  </data>
  <data name="InputsDescription" xml:space="preserve">
    <value>Пользовательские входы - это способ определить некоторые значения непосредственно во время выполнения. Пользователи конфигурации получат несколько всплывающих окон при запуске задания, а их ответ будет вставлен как переменная типа string, которую вы можете использовать по своему усмотрению.</value>
  </data>
  <data name="Invert" xml:space="preserve">
    <value>Инвертировать</value>
  </data>
  <data name="LinesFromFile" xml:space="preserve">
    <value>Строки из файла</value>
  </data>
  <data name="LoadOnlyDocumentAndScript" xml:space="preserve">
    <value>Загрузите только документ и сценарий</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Местонахождение</value>
  </data>
  <data name="LoopsAround" xml:space="preserve">
    <value>Петли вокруг</value>
  </data>
  <data name="MaxUsesPerProxy" xml:space="preserve">
    <value>Максимальное количество использований для одного прокси (0 - бесконечность)</value>
  </data>
  <data name="Proxies" xml:space="preserve">
    <value>Прокси</value>
  </data>
  <data name="Puppeteer" xml:space="preserve">
    <value>Кукловод</value>
  </data>
  <data name="PuppeteerCommandLineArguments" xml:space="preserve">
    <value>Аргументы командной строки (например, --disable-notifications --incognito)</value>
  </data>
  <data name="PuppeteerUserAgent" xml:space="preserve">
    <value>Агент пользователя (по умолчанию, если пусто)</value>
  </data>
  <data name="QuitBrowserStatuses" xml:space="preserve">
    <value>Выйдите из браузера, когда бот завершает работу с одним из этих статусов</value>
  </data>
  <data name="RandomLinesFromFile" xml:space="preserve">
    <value>Произвольные строки из файла</value>
  </data>
  <data name="RandomUserAgent" xml:space="preserve">
    <value>Случайный пользовательский агент</value>
  </data>
  <data name="RegexRule" xml:space="preserve">
    <value>Правило регекса</value>
  </data>
  <data name="RegexToMatch" xml:space="preserve">
    <value>Регекс для сопоставления</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Удалить</value>
  </data>
  <data name="Requests" xml:space="preserve">
    <value>Запросы</value>
  </data>
  <data name="ResourceName" xml:space="preserve">
    <value>Название ресурса</value>
  </data>
  <data name="Resources" xml:space="preserve">
    <value>Ресурсы</value>
  </data>
  <data name="RestoreDefaults" xml:space="preserve">
    <value>Восстановление настроек по умолчанию</value>
  </data>
  <data name="RestoreDefaultSettingsConfirmation" xml:space="preserve">
    <value>Хотите ли вы восстановить настройки по умолчанию?</value>
  </data>
  <data name="SaveEmptyCaptures" xml:space="preserve">
    <value>Сохраняйте также пустые захваты</value>
  </data>
  <data name="SimpleRule" xml:space="preserve">
    <value>Простое правило</value>
  </data>
  <data name="SliceName" xml:space="preserve">
    <value>Название ломтика</value>
  </data>
  <data name="SuggestedBots" xml:space="preserve">
    <value>Предполагаемое количество ботов</value>
  </data>
  <data name="ToggleRegexHelper" xml:space="preserve">
    <value>Toggle Regex Helper</value>
  </data>
  <data name="Unique" xml:space="preserve">
    <value>Только уникальные линии</value>
  </data>
  <data name="UrlEncodeAfterSlicing" xml:space="preserve">
    <value>URL Кодирование данных после нарезки</value>
  </data>
  <data name="UseProxies" xml:space="preserve">
    <value>Используйте прокси-серверы</value>
  </data>
  <data name="VariableName" xml:space="preserve">
    <value>Имя переменной</value>
  </data>
</root>
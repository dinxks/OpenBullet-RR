<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllDone" xml:space="preserve">
    <value>Hepsi tamam!</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Emin misin?</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Sahibi</value>
  </data>
  <data name="by" xml:space="preserve">
    <value>tarafından</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>İptal</value>
  </data>
  <data name="CannotDownloadRemoteConfig" xml:space="preserve">
    <value>Uzaktan yapılandırma indirilemiyor</value>
  </data>
  <data name="CannotEditRemoteConfig" xml:space="preserve">
    <value>Uzak yapılandırma düzenlenemez</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Kategori</value>
  </data>
  <data name="ConfigReloadWarning" xml:space="preserve">
    <value>Bu, tüm yapılandırmaları diskten yeniden yükleyeceği için kaydedilmemiş tüm değişiklikler kaybolacaktır. Devam etmek istiyor musunuz?</value>
  </data>
  <data name="ConfigsSuccessfullyUploaded" xml:space="preserve">
    <value>Yapılandırmalar başarıyla yüklendi</value>
  </data>
  <data name="ConfigWarningMessage" xml:space="preserve">
    <value>UYARI! Yapılandırmalar, kötü niyetli davranışlar için herhangi bir otomatik denetim yapılmadan yürütülen C # kodunu içerir. 3. taraflarca yapılan yapılandırmaları kullanırsanız, yapılandırmaların tam olarak yapmaları gereken şeyi yaptığından ve güvenilmeyen hiçbir şeyin olmadığından emin olmak SİZİN sorumluluğunuzdadır. Kaynağa tamamen güvenmiyorsanız, çalıştırmadan önce her zaman LoliCode / C # kodunu kendiniz kontrol edin.</value>
  </data>
  <data name="CreationDate" xml:space="preserve">
    <value>Oluşturulma tarihi</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Sil</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>İndir</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Düzenle</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>Yapılandırma nedir?</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>%Yapılandırma% genellikle web kaynaklarına yönelik belirli eylemleri otomatikleştirmek için talimatlar içeren bir dosyadır. Yapılandırmalar bazı %metaveriler% (bir ad, yazar ve simge gibi), nasıl kullanılacağına veya ne için kullanılacağına ilişkin talimatların bulunduğu bir %benioku% dosyası, bazı ayarlar ve ardından özel %LoliCode% komut dosyası dili içinde bulunan ya da tamamen %C#% içinde bulunan talimatlar içerir. Diskte, yapılandırmalar %UserData/Configs% alt klasörüne %.opk% uzantılı dosyalar olarak kaydedilir.</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>Yapılandırmalar, belirli bir veri kümesinde (örneğin bir sözcük listesi) paralel olarak bazı talimatları yürütmek için %MultiRun Job% gibi işlerde kullanılabilir. Örneğin, belirli bir web sitesinin belirli alt yollarının geçerli bir yanıta karşılık verip vermediğini kontrol etmek için kullanılabilirler veya bir çevrimiçi mağazanın birden çok sayfasından bağlantı istatistikleri almak için kullanılabilirler.</value>
  </data>
  <data name="Help2x00" xml:space="preserve">
    <value>Yapılandırma yöneticisi nasıl çalışır?</value>
  </data>
  <data name="Help2x01" xml:space="preserve">
    <value>%Yapılandırma Yöneticisi% tüm yapılandırmalarınızı takip eder. OB2 başladığında yapılandırmalar Yapılandırmalar alt klasöründen yüklenir ve eğer bu klasöre bazı yeni yapılandırmalar eklenirse, yükleme işlemini yeniden başlatmak için %Yeniden yükle% tuşuna basmanız yeterlidir. Yapılandırma klasörüne kolay erişiminiz yoksa (örneğin, OB2 bir vps'de çalışıyorsa), ilgili buton olan %Yükle% ile bir yapılandırma yükleyebilirsiniz. Aynı şekilde mevcut yapılandırmaları %İndir% butonu ile indirebilirsiniz.</value>
  </data>
  <data name="Help2x02" xml:space="preserve">
    <value>En üstte, yeni bir yapılandırma oluşturacağınız %Yeni% butonunu bulabilirsiniz. Bir yapılandırmayı düzenlemek için %düzenle% butonuna tıklayabilir ya da listedeki yapılandırmaya çift tıklayabilirsiniz. Ayrıca %görüntüyü değiştir% butonu ile daha detaylı ızgara görünümü sağlayabilirsiniz.</value>
  </data>
  <data name="Help3x00" xml:space="preserve">
    <value>.opk dosyası nedir?</value>
  </data>
  <data name="Help3x01" xml:space="preserve">
    <value>Bir %.opk% dosyası içinde bazı dosyaları içeren bir %zip arşiv%'idir. İlk dosya, yapılandırmanın adını, sahibini ve simgesini içeren %metadata.json% dosyasıdır. Simge, bir GIF de olabilen, base64 olarak kodlanmış bir görüntüdür. %Benioku.md% dosyası yapılandırmanın bir açıklamasını içeren, kullanıcıya iş kurulumu işlemi sırasında yapılandırma seçim menüsünü açtıklarında gösterilecektir. Markdown dilini destekler. %settings.json% dosyası yapılandırmaya özgü ayarları içerir.</value>
  </data>
  <data name="Help3x02" xml:space="preserve">
    <value>Son olarak, yapılandırmanız yığınlayıcı kullanıyorsa, talimatlar %script.loli% dosyası içinde bir LoliCode betiği olarak kaydedilecektir. Bunun yerine yapılandırmanızı yalnızca C# 'ye dönüştürmeye karar verdiyseniz, çalıştırılacak C# koduyla %script.cs% adlı bir dosya oluşturulur.</value>
  </data>
  <data name="LastModified" xml:space="preserve">
    <value>Son Düzenleme</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Yükleniyor</value>
  </data>
  <data name="LocalConfigs" xml:space="preserve">
    <value>Yerel yapılandırmalar</value>
  </data>
  <data name="MissingPlugin" xml:space="preserve">
    <value>Eksik Eklenti</value>
  </data>
  <data name="MissingPluginText" xml:space="preserve">
    <value>Yapılandırma bu eklenti ile oluşturuldu, ancak eksik</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>İsim</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Yeni</value>
  </data>
  <data name="NoConfigSelectedWarning" xml:space="preserve">
    <value>Önce bir yapılandırma dosyası seçelim istersen!</value>
  </data>
  <data name="Proxies" xml:space="preserve">
    <value>Proksiler</value>
  </data>
  <data name="ReallyDelete" xml:space="preserve">
    <value>Silmek istediğine emin misin?</value>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>Tekrar yükle</value>
  </data>
  <data name="Remote" xml:space="preserve">
    <value>Uzak bağlantı</value>
  </data>
  <data name="RemoteConfig" xml:space="preserve">
    <value>Uzak bağlantı yapılandırması</value>
  </data>
  <data name="RemoteConfigs" xml:space="preserve">
    <value>Uzak bağlantı yapılandırmaları</value>
  </data>
  <data name="ToggleView" xml:space="preserve">
    <value>Görünümü Değiştir</value>
  </data>
  <data name="Uh-Oh" xml:space="preserve">
    <value>Ah-kalbim</value>
  </data>
  <data name="UnsavedChanges" xml:space="preserve">
    <value>Kaydedilmemiş Değişiklikler</value>
  </data>
  <data name="UnsavedChangesText" xml:space="preserve">
    <value>Mevcut yapılandırmada kaydedilmemiş değişiklikler var! Yine de devam edilsin mi?</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Yükle</value>
  </data>
  <data name="WARNING" xml:space="preserve">
    <value>UYARI</value>
  </data>
  <data name="Wordlists" xml:space="preserve">
    <value>Sözcük Listeleri</value>
  </data>
</root>
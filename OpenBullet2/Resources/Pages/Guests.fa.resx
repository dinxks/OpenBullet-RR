<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessExpiration" xml:space="preserve">
    <value>انقضا دسترسی</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>اضافه کردن</value>
  </data>
  <data name="AddGuest" xml:space="preserve">
    <value>مهمان اضافه کنید</value>
  </data>
  <data name="AllowedAddresses" xml:space="preserve">
    <value>آدرسهای مجاز</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>مطمئنی؟</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>لغو</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>پاک کردن</value>
  </data>
  <data name="EditGuest" xml:space="preserve">
    <value>ویرایش مهمان</value>
  </data>
  <data name="EditInfo" xml:space="preserve">
    <value>ویرایش اطلاعات</value>
  </data>
  <data name="EditPassword" xml:space="preserve">
    <value>ویرایش رمز</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>این چطوری کار میکنه؟</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>OpenBullet 2 به شما امکان می دهد برای٪ مهمان٪ حساب ایجاد کنید که می توانند به سرور OpenBullet 2 شما دسترسی پیدا کنند. اول از همه ، به یاد داشته باشید که گزینه٪نیاز به ورود مدیر دارید٪ را در تنظیمات امنیتی٪ OB روشن کنید. این تضمین می کند که از افرادی که به این سرور پیوند دارند با صفحه ورود به سیستم استقبال می شود. برای اینکه سایر افراد به این سرور دسترسی پیدا کنند ، باید٪ پورتهای روتر خود را باز کرده و٪ قوانین فایروال٪ را روی دستگاه خود تنظیم کنید. این کار معمولاً در VPS برای شما انجام می شود ، که روش پیشنهادی میزبان نصب OpenBullet 2 در معرض دید عموم است.</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>در٪ تنظیمات امنیت٪ همچنین قادر خواهید بود٪ مهمان جلسه طول عمر٪ را تعیین کنید ، این مقدار ساعاتی است که پس از آن از مهمانان خواسته می شود یک بار دیگر وارد سیستم شوند. این مفید است زیرا شما نمی خواهید مهمانها به مدت نامحدود به سرور دسترسی داشته باشند. توجه داشته باشید که وقتی سرور یک٪٪ رمز معتبر برای میهمان ایجاد کرد ، تا زمان انقضا معتبر خواهد بود ، بنابراین حتی اگر یک مهمان را از جدول بالا حذف کنید ، می تواند از نصب OpenBullet 2 شما برای مدت زمان طولانی استفاده کند. رمز معتبر است</value>
  </data>
  <data name="Help1x03" xml:space="preserve">
    <value>با کلیک بر روی دکمه٪ اضافه٪ در بالا ، شما می توانید٪ اطلاعات ورود٪ را برای مهمان جدید ایجاد کنید ،٪ پایان منقضی شد٪ (پس از آن سرور دیگر یک رمز معتبر برای مهمان ارسال نمی کند) و به صورت اختیاری تعدادی٪ از آدرسهای IP را تنظیم کنید که مهمان مجاز است از آنها متصل شود. این برای جلوگیری از به اشتراک گذاشتن حساب مهمان با افراد دیگر مفید است.</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>بارگذاری</value>
  </data>
  <data name="NewPasswordForGuest" xml:space="preserve">
    <value>رمز جدید برای مهمان</value>
  </data>
  <data name="NoGuestSelectedWarning" xml:space="preserve">
    <value>ابتدا باید یک مهمان انتخاب کنید</value>
  </data>
  <data name="NoRecordsToDisplay" xml:space="preserve">
    <value>هیچ پرونده برای نمایش نیست</value>
  </data>
  <data name="ReallyDelete" xml:space="preserve">
    <value>آیا واقعاً می خواهید حذف کنید</value>
  </data>
   <data name="DeleteEverything" xml:space="preserve">
    <value>آیا واقعاً می خواهید حذف کنید</value>
  </data>
  <data name="DeleteEverythingMessage" xml:space="preserve">
    <value>آیا واقعاً می خواهید همه موارد را حذف کنید</value>
  </data>
  <data name="results" xml:space="preserve">
    <value>نتایج</value>
  </data>
  <data name="ResultsPerPage" xml:space="preserve">
    <value>نتایج در هر صفحه</value>
  </data>
  <data name="Uh-Oh" xml:space="preserve">
    <value>هولی شت</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>نام کاربری</value>
  </data>
</root>

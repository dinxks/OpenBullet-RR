<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root"
    xmlns=""
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="2CaptchaApiKey" xml:space="preserve">
    <value>API Key 2Captcha</value>
  </data>
  <data name="AntiCaptchaApiKey" xml:space="preserve">
    <value>API Key Anti-Captcha</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Tem certeza?</value>
  </data>
  <data name="AZCaptchaApiKey" xml:space="preserve">
    <value>API Key AZ Captcha</value>
  </data>
  <data name="Balance" xml:space="preserve">
    <value>Saldo</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="CapMonsterHost" xml:space="preserve">
    <value>Host CapMonster</value>
  </data>
  <data name="CapMonsterPort" xml:space="preserve">
    <value>Porta CapMonster</value>
  </data>
  <data name="Captchas" xml:space="preserve">
    <value>Captchas</value>
  </data>
  <data name="CaptchasDotIoApiKey" xml:space="preserve">
    <value>API Key Captchas.IO</value>
  </data>
  <data name="CheckBalance" xml:space="preserve">
    <value>Verificar Saldo</value>
  </data>
  <data name="CheckBalanceBeforeSolving" xml:space="preserve">
    <value>Verificar saldo da conta antes de resolver captcha</value>
  </data>
  <data name="ChromeBinaryLocation" xml:space="preserve">
    <value>Caminho do binário(.exe) do Chrome</value>
  </data>
  <data name="ConnectTimeoutMilliseconds" xml:space="preserve">
    <value>Tempo limite de conexão (milissegundos)</value>
  </data>
  <data name="CurrentService" xml:space="preserve">
    <value>Serviço atual</value>
  </data>
  <data name="Custom2CaptchaApiKey" xml:space="preserve">
    <value>API Key 2Captcha Customizado</value>
  </data>
  <data name="Custom2CaptchaHost" xml:space="preserve">
    <value>Host 2Captcha Customizado</value>
  </data>
  <data name="Custom2CaptchaPort" xml:space="preserve">
    <value>Porta 2Captcha Customizado</value>
  </data>
  <data name="DeathByCaptcha Username" xml:space="preserve">
    <value>Usuário Death By Captcha</value>
  </data>
  <data name="DeathByCaptchaPassword" xml:space="preserve">
    <value>Senha Death By Captcha</value>
  </data>
  <data name="DeCaptcherPassword" xml:space="preserve">
    <value>Senha DeCaptcher</value>
  </data>
  <data name="DeCaptcherUsername" xml:space="preserve">
    <value>Usuário DeCaptcher</value>
  </data>
  <data name="DrawMouseMovement" xml:space="preserve">
    <value>Desenhar movimento do mouse</value>
  </data>
  <data name="EnableBotLogging" xml:space="preserve">
    <value>Ativar logs do bot</value>
  </data>
  <data name="FirefoxBinaryLocation" xml:space="preserve">
    <value>Caminho do binário(.exe) do Firefox</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>Geral</value>
  </data>
  <data name="GlobalBanKeys" xml:space="preserve">
    <value>Keys globais de banimento</value>
  </data>
  <data name="GlobalRetryKeys" xml:space="preserve">
    <value>Keys globais de retry</value>
  </data>
  <data name="ImageTyperzApiKey" xml:space="preserve">
    <value>API Key Imagetyperz</value>
  </data>
  <data name="LogJobActivityToFile" xml:space="preserve">
    <value>Salvar logs dos trabalhos para um arquivo</value>
  </data>
  <data name="LogAllResults" xml:space="preserve">
    <value>Registrar todas linhas testadas nos logs do trabalhos. (AVISO: Pode resultar em um alto uso de disco quando testando muitas linhas!)</value>
  </data>
  <data name="ParallelizerType" xml:space="preserve">
    <value>Tipo do Paralelizador</value>
  </data>
  <data name="Proxies" xml:space="preserve">
    <value>Proxies</value>
  </data>
  <data name="Puppeteer" xml:space="preserve">
    <value>Puppeteer</value>
  </data>
  <data name="ReadWriteTimeoutMilliseconds" xml:space="preserve">
    <value>Tempo limite de escritura/leitura (milissegundos)</value>
  </data>
  <data name="RestoreDefaults" xml:space="preserve">
    <value>Restaurar configurações padrão</value>
  </data>
  <data name="RestoreDefaultSettingsConfirmation" xml:space="preserve">
    <value>Você deseja restaurar as configurações padrão?</value>
  </data>
  <data name="RestrictBlocksToCWD" xml:space="preserve">
    <value>Restringir as capacidades de I/O dos blocos apenas para o diretório de trabalho atual</value>
  </data>
  <data name="RuCaptchaApiKey" xml:space="preserve">
    <value>API Key RuCaptcha</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Salvar</value>
  </data>
  <data name="Saved" xml:space="preserve">
    <value>Salvo</value>
  </data>
  <data name="SelectedBrowser" xml:space="preserve">
    <value>Selecionar Navegador</value>
  </data>
  <data name="SettingsSaved" xml:space="preserve">
    <value>As configurações foram salvas com sucesso.</value>
  </data>
  <data name="SolveCaptchaApiKey" xml:space="preserve">
    <value>API Key SolveCaptcha</value>
  </data>
  <data name="SolveRecaptchaApiKey" xml:space="preserve">
    <value>API Key SolveRecaptcha</value>
  </data>
  <data name="TimeoutSeconds" xml:space="preserve">
    <value>Tempo limite em segundos</value>
  </data>
  <data name="TrueCaptchaApiKey" xml:space="preserve">
    <value>API Key TrueCaptcha</value>
  </data>
  <data name="TrueCaptchaUsername" xml:space="preserve">
    <value>Usuário TrueCaptcha</value>
  </data>
  <data name="UseCustomUserAgentsList" xml:space="preserve">
    <value>Usar lista customizada de User Agents</value>
  </data>
  <data name="UserAgents" xml:space="preserve">
    <value>User Agents</value>
  </data>
</root>
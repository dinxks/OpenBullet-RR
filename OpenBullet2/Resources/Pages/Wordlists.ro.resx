<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Adauga</value>
  </data>
  <data name="Added" xml:space="preserve">
    <value>Adaugat</value>
  </data>
  <data name="AddedWordlist" xml:space="preserve">
    <value>Lista a fost adaugata cu succes</value>
  </data>
  <data name="AddWordlist" xml:space="preserve">
    <value>Adauga wordlist</value>
  </data>
  <data name="AlsoDeleteFile" xml:space="preserve">
    <value>Sterge si fisierul acesta?</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Esti sigur?</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Anuleaza</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Sterge</value>
  </data>
  <data name="DeleteFileText1" xml:space="preserve">
    <value>Esti sigur ca vrei sa il stergi</value>
  </data>
  <data name="DeleteFileText2" xml:space="preserve">
    <value>si din stocare?</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Editeaza</value>
  </data>
  <data name="EditWordlist" xml:space="preserve">
    <value>Editeaza Wordlist</value>
  </data>
  <data name="FileName" xml:space="preserve">
    <value>Numele fisierului</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>Cum functioneaza</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>Aici puteti importa liste de cuvinte. In primul rand faceti clic pe butonul %Adaugati% de mai sus. Veti putea specifica un %Wordlist Type% (mai multe informatii despre aceasta mai tarziu), un %Name% si un %Purpose%. Aveti doua optiuni pentru a incarca fisierul. Prima optiune este sa o %incarcati% pe serverul care ruleaza instanta OpenBullet2. Aceasta este metoda preferata %daca lista de cuvinte se afla pe clientul% din care accesati OB2 prin browser, dar OB2 este gazduit pe o alta masina. Aceasta metoda de adaugare a unei liste de cuvinte adauga unele cheltuieli generale, deoarece lista de cuvinte trebuie incarcata prin browser.</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>%Daca lista de cuvinte este pe server%, ceea ce inseamna ca incercati sa extrageti un fisier de pe aceeasi masina in care ruleaza OB2, puteti utiliza optiunea %File System%, care va va permite sa navigati vizual prin foldere in cautarea fisierul dorit. Retineti ca, pentru a accesa locatiile de pe unitate care se afla in afara directorului de lucru curent al OB2, va trebui sa accesati optiunile de securitate OpenBullet si sa permiteti accesul la fisier la nivel de sistem.</value>
  </data>
  <data name="Help1x03" xml:space="preserve">
    <value>In ceea ce priveste %Wordlist Type%, veti gasi tipurile de Wordlist specificate in prezent in fisierul %Settings/Environment.ini% din directorul dvs. OB2. Tipurile de liste de cuvinte sunt incarcate la pornirea OB2. Puteti schimba acest fisier si puteti adauga/elimina/modifica tipurile de liste de cuvinte pentru a se potrivi cu formatul listelor de cuvinte. Puteti citi mai multe despre tipurile de Wordlist in sectiunea oficiala a ghidurilor forumului.</value>
  </data>
  <data name="KeepFile" xml:space="preserve">
    <value>Nu, Pastreaza fisierul</value>
  </data>
  <data name="Lines" xml:space="preserve">
    <value>Linii</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nume</value>
  </data>
  <data name="NoRecordsToDisplay" xml:space="preserve">
    <value>Nu exista inregistrari de afisat</value>
  </data>
  <data name="NoWordlistSelected" xml:space="preserve">
    <value>Trebuie mai intai sa selectezi un Wordlist</value>
  </data>
  <data name="Purpose" xml:space="preserve">
    <value>Motiv</value>
  </data>
  <data name="ReallyDelete" xml:space="preserve">
    <value>Chiar vrei sa stergi</value>
  </data>
  <data name="results" xml:space="preserve">
    <value>rezultate</value>
  </data>
  <data name="ResultsPerPage" xml:space="preserve">
    <value>Rezultate pe pagina</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Tip</value>
  </data>
  <data name="Uh-Oh" xml:space="preserve">
    <value>Oh-Uh</value>
  </data>
</root>
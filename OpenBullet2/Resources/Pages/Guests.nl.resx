<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessExpiration" xml:space="preserve">
    <value>Toegang vervalt</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Toevoegen</value>
  </data>
  <data name="AddGuest" xml:space="preserve">
    <value>Gast toevoegen</value>
  </data>
  <data name="AllowedAddresses" xml:space="preserve">
    <value>Toegestane adressen</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Weet je het zeker?</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annuleer</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Verwijderen</value>
  </data>
  <data name="EditGuest" xml:space="preserve">
    <value>Gast bewerken</value>
  </data>
  <data name="EditInfo" xml:space="preserve">
    <value>Info wijzigen</value>
  </data>
  <data name="EditPassword" xml:space="preserve">
    <value>Wachtwoord wijzigen</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>Hoe werkt dit?</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>Met OpenBullet 2 kunt u accounts aanmaken voor %gasten% die toegang hebben tot uw OpenBullet 2-server. Vergeet allereerst niet om de optie %vereist admin login% in te schakelen in OB's %beveiligingsinstellingen%. Dit garandeert dat mensen met de link naar deze server worden verwelkomd met een inlogscherm. Om ervoor te zorgen dat andere mensen deze server kunnen bereiken, moet u %de poorten% op uw router openen en de %firewallregels% op uw computer instellen. Dit is meestal al voor u gedaan op een VPS, wat de voorgestelde manier is om een ​​openbaar blootgestelde OpenBullet 2-installatie te hosten.</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>In de %beveiligingsinstellingen% kun je ook de %gast sessie levensduur% definiëren, dit is het aantal uren waarna gasten wordt gevraagd om opnieuw in te loggen. Dit is handig omdat u misschien niet wilt dat gasten voor onbepaalde tijd toegang hebben tot de server. Merk op dat zodra de server een geldig %token% voor de gast heeft gegenereerd, deze geldig zal zijn totdat deze is verlopen, dus zelfs als u een gast uit de bovenstaande tabel verwijdert, zal deze uw OpenBullet 2-installatie kunnen gebruiken zolang de token geldig is.</value>
  </data>
  <data name="Help1x03" xml:space="preserve">
    <value>Door op de %Nieuw% knop hierboven te klikken, kunt u %inloggegevens% aanmaken voor de nieuwe gast, de %access expiration% instellen (waarna de server geen geldig token meer naar de gast stuurt) en optioneel  een aantal %IP-adressen% in kan stellen waarmee de gast verbinding mag maken. Dit is handig om te voorkomen dat gasten hun account met andere mensen delen.</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Bezig met laden</value>
  </data>
  <data name="NewPasswordForGuest" xml:space="preserve">
    <value>Nieuw wachtwoord voor gast</value>
  </data>
  <data name="NoGuestSelectedWarning" xml:space="preserve">
    <value>U moet eerst een gast selecteren</value>
  </data>
  <data name="NoRecordsToDisplay" xml:space="preserve">
    <value>Geen records om weer te geven</value>
  </data>
  <data name="ReallyDelete" xml:space="preserve">
    <value>Wil je dit echt verwijderen</value>
  </data>
   <data name="DeleteEverything" xml:space="preserve">
    <value>Wil je dit echt verwijderen</value>
  </data>
  <data name="DeleteEverythingMessage" xml:space="preserve">
    <value>Weet je zeker dat je alles wilt verwijderen?</value>
  </data> 
  <data name="results" xml:space="preserve">
    <value>Resultaten</value>
  </data>
  <data name="ResultsPerPage" xml:space="preserve">
    <value>Resultaten per pagina</value>
  </data>
  <data name="Uh-Oh" xml:space="preserve">
    <value>Uh-Oh</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Gebruikersnaam</value>
  </data>
</root>

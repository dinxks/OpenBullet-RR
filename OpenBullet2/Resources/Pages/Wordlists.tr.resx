<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Ekle</value>
  </data>
  <data name="Added" xml:space="preserve">
    <value>Eklendi</value>
  </data>
  <data name="AddedWordlist" xml:space="preserve">
    <value>Kelime listesi/wordlist başarıyla eklendi!</value>
  </data>
  <data name="AddWordlist" xml:space="preserve">
    <value>Kelime listesi ekle</value>
  </data>
  <data name="AlsoDeleteFile" xml:space="preserve">
    <value>Dosya da silinsin mi?</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Emin misin?</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>İptal</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Sil</value>
  </data>
  <data name="DeleteFileText1" xml:space="preserve">
    <value>Silmek istiyor musun</value>
  </data>
  <data name="DeleteFileText2" xml:space="preserve">
    <value>diskten de?</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Düzenle</value>
  </data>
  <data name="EditWordlist" xml:space="preserve">
    <value>Kelime listesi düzenle</value>
  </data>
  <data name="FileName" xml:space="preserve">
    <value>Dosya Adı</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>Bu nasıl çalışıyor?</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>Burada kelime listelerini içe aktarabilirsiniz. Öncelikle yukarıdaki %Ekle% butonuna tıklayın. Bir %Kelime listesi türü% (bununla ilgili daha fazla bilgi daha sonra), %İsim% ve bir %Amaç% belirleyebilirsiniz. Dosyanızı yüklemek için iki seçeneğiniz var. İlk seçenek, OpenBullet2'nin bir örneğini çalıştıran sunucuya %yükleme% işlemi yapmaktır. %Kelime listesi, tarayıcı aracılığıyla OB2'ye eriştiğiniz istemcideyse%, ancak OB2 farklı bir makinede barındırılıyorsa tercih edilen yöntem budur. Bu kelime listesi ekleme yöntemi, tarayıcı aracılığıyla yüklenmesi gerektiğinden biraz ek yük getirir.</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>%Kelime listesi bir sunucuda ise%, bu OB2'nin çalıştığı makineden bir dosya almaya çalıştığınız anlamına gelir, klasörler arasında görsel olarak göz atmanıza izin veren %Dosya Sistemi% seçeneğini kullanabilirsiniz, Sürücüde OB2'nin mevcut çalışma dizininin dışındaki konumlara erişmek için OpenBullet'in güvenlik seçeneklerine gitmeniz ve sistem genelinde dosya erişimine izin vermeniz gerektiğini unutmayın.</value>
  </data>
  <data name="Help1x03" xml:space="preserve">
    <value>%Kelime listesi/Wordlist Türü% ile ilgili olarak, OB2 dizininizdeki %UserData/Environment.ini% dosyasında güncel olarak belirtilmiş olan Kelime Listesi/Wordlist Türlerini bulacaksınız. Kelime Listesi/Wordlist Türleri OB2 başladığında yüklenir. Bu dosyayı değiştirebilir ve kelime listelerinizin formatına uyması için Kelime Listesi Türleri ekleyebilir/kaldırabilir/değiştirebilirsiniz. Resmi forumun kılavuzlar bölümünde Kelime Listesi Türleri hakkında daha fazla bilgi edinebilirsiniz.</value>
  </data>
  <data name="KeepFile" xml:space="preserve">
    <value>Hayır, dosyayı sakla</value>
  </data>
  <data name="Lines" xml:space="preserve">
    <value>Satırlar</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Yükleniyor</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>İsim</value>
  </data>
  <data name="NoRecordsToDisplay" xml:space="preserve">
    <value>Gösterilecek kayıt yok</value>
  </data>
  <data name="NoWordlistSelected" xml:space="preserve">
    <value>Önce bir kelime listesi seçmelisiniz</value>
  </data>
  <data name="Purpose" xml:space="preserve">
    <value>Amaç</value>
  </data>
  <data name="ReallyDelete" xml:space="preserve">
    <value>Gerçekten silmek istiyor musun?</value>
  </data>
  <data name="results" xml:space="preserve">
    <value>sonuçlar</value>
  </data>
  <data name="ResultsPerPage" xml:space="preserve">
    <value>Sayfa başına sonuç</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Tür</value>
  </data>
  <data name="Uh-Oh" xml:space="preserve">
    <value>Ah-Kalbim</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllDone" xml:space="preserve">
    <value>Am terminat!</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Esti sigur?</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Autor</value>
  </data>
  <data name="by" xml:space="preserve">
    <value>de</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Anulare</value>
  </data>
  <data name="CannotDownloadRemoteConfig" xml:space="preserve">
    <value>Nu poti descarca Configul Remote</value>
  </data>
  <data name="CannotEditRemoteConfig" xml:space="preserve">
    <value>Nu poti edita Configul Remote</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Categorie</value>
  </data>
  <data name="ConfigReloadWarning" xml:space="preserve">
    <value>Voi reincarca toate configurile din disk, toate modificarile nesalvate vor fi pierdute. Esti sigur ca vrei sa continui?</value>
  </data>
  <data name="ConfigsSuccessfullyUploaded" xml:space="preserve">
    <value>Configurile incarcate cu succes</value>
  </data>
  <data name="ConfigWarningMessage" xml:space="preserve">
    <value>ATENTIE! Configurarea contine code C# care este executat fara niciun fel de verificare pentru activitati rau intetionate. Daca folosesti configuratii create de 3rd parties, este responsabilitatea ta sa fii sigur ca configurarea face ceea ce ar trebui si nimic mai mult. Oricum verifica LoliCode / Codul C# chiar tu inainte sa pornesti configurarea daca nu ai incredere in creator.</value>
  </data>
  <data name="CreationDate" xml:space="preserve">
    <value>Data Creare</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Sterge</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Descarca</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Editeaza</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>Ce este un config?</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>Un %Config% este un fisier care contine instructiuni pentru automatizarea actiunilor, de obicei catre o pagina web. Confuratiile contin %metadata% (precum un nume,un autor sau o iconita), un %readme% cu instructiuni despre cum sa folosesti sau pentru ce este, cateva setari, si instructiuni care pot fie sa fie in codul special creat %LoliCode% sau in codul %C#%. In stocare, configurile  sunt salvate ca fisiere cu extensia %.opk% in sub folderul %UserData/Configs%.</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>Configurile pot fi folosite in alte feluri precum %MultiRun Job% in ordine sa execute cateva instructiuni sau un set de date (ex. o lista de cuvinte) in paralel. De exemplu, acestea pot fi folosite sa verifici daca specifice adrese pentru un site trimit un raspuns valid sau acestea pot fi folosite pentru a cauta linkuri dintr-un site cu mai multe pagini.</value>
  </data>
  <data name="Help2x00" xml:space="preserve">
    <value>Cum functioneaza Config Managerul?</value>
  </data>
  <data name="Help2x01" xml:space="preserve">
    <value>%Config Manager% este o biblioteca pentru configurile tale. Configurile sunt incarcate din sub folderul `UserData/Configs` si daca un config nou este adaugat in acel folder poti sa apesi pe %Reload% pentru a-l putea incarca in biblioteca. Daca nu ai un acces usor in folderul Configs (de exemplu OB2 functioneaza pe un vps) poti sa %Upload% un config cu acest buton. Poti si sa %Download% un config deja existent prin aceasta metoda.</value>
  </data>
  <data name="Help2x02" xml:space="preserve">
    <value>Sus poti gasi butonul %New% prin care poti crea un config nou. Pentru a %edit% un config poti sa apesi pe butonul Editare sau sa dai dublu click pe config in lista. Mai exista si un buton pentru %change the view% intr-o grila mai detaliata.</value>
  </data>
  <data name="Help3x00" xml:space="preserve">
    <value>Ce este un fisier .opk?</value>
  </data>
  <data name="Help3x01" xml:space="preserve">
    <value>Un fisier %.opk% este o %zip archive% care contine cateva fisiere inauntru. Primul fisier este %metadata.json% care contine numele,creatorul si iconita configului. Iconita este o imagine encriptata in base64 care poate fi si un gif. Fisierul %readme.md% va contine o descriptie despre config, va fi afisat utilizatorului atunci cand acesta va deschide meniul cu configuri in timpul setarii actiunii. Va suporta limbajul markdown/ Fisierul %settings.json% va contine setarile specifice configului.</value>
  </data>
  <data name="Help3x02" xml:space="preserve">
    <value>In sfarsit, daca configul tau foloseste stacker, instructiunile vor fi salvate in limbajul LoliCode in fisierul %script.loli%. Daca in schimb vei decide sa convertesti configul tau in C#, fisierul va fi numit %script.cs% si va fi creat cu un code C#.</value>
  </data>
  <data name="LastModified" xml:space="preserve">
    <value>Ultima Modificare</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading</value>
  </data>
  <data name="LocalConfigs" xml:space="preserve">
    <value>Configuri Locale</value>
  </data>
  <data name="MissingPlugin" xml:space="preserve">
    <value>Lipseste Plugin</value>
  </data>
  <data name="MissingPluginText" xml:space="preserve">
    <value>Configul a fost creat cu acest plugin, dar acesta lipseste</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nume</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Nou</value>
  </data>
  <data name="NoConfigSelectedWarning" xml:space="preserve">
    <value>Se pare ca nu ai selectat niciun config!</value>
  </data>
  <data name="Proxies" xml:space="preserve">
    <value>Proxies</value>
  </data>
  <data name="ReallyDelete" xml:space="preserve">
    <value>Chiar vrei sa stergi?</value>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>Reincarca</value>
  </data>
  <data name="Remote" xml:space="preserve">
    <value>Remote</value>
  </data>
  <data name="RemoteConfig" xml:space="preserve">
    <value>Remote config</value>
  </data>
  <data name="RemoteConfigs" xml:space="preserve">
    <value>Remote configs</value>
  </data>
  <data name="ToggleView" xml:space="preserve">
    <value>Comutare Vizualizarea</value>
  </data>
  <data name="Uh-Oh" xml:space="preserve">
    <value>Oh-Uh</value>
  </data>
  <data name="UnsavedChanges" xml:space="preserve">
    <value>Schimbarile nu au fost salvate</value>
  </data>
  <data name="UnsavedChangesText" xml:space="preserve">
    <value>Configul actual are schimbari nesalvate! Continuati oricum?</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Incarca</value>
  </data>
  <data name="WARNING" xml:space="preserve">
    <value>ATENTIE</value>
  </data>
  <data name="Wordlists" xml:space="preserve">
    <value>Wordlists</value>
  </data>
</root>
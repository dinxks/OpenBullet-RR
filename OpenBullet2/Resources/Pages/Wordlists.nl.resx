<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Toevoegen</value>
  </data>
  <data name="Added" xml:space="preserve">
    <value>Toegevoegd</value>
  </data>
  <data name="AddedWordlist" xml:space="preserve">
    <value>De wordlist is succesvol toegevoegd!</value>
  </data>
  <data name="AddWordlist" xml:space="preserve">
    <value>Voeg wordlist toe</value>
  </data>
  <data name="AlsoDeleteFile" xml:space="preserve">
    <value>Wilt u het bestand ook verwijderen?</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Weet je het zeker?</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annuleer</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Verwijderen</value>
  </data>
  <data name="DeleteFileText1" xml:space="preserve">
    <value>Wil je dit echt verwijderen</value>
  </data>
  <data name="DeleteFileText2" xml:space="preserve">
    <value>ook van de schijf?</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Bewerk</value>
  </data>
  <data name="EditWordlist" xml:space="preserve">
    <value>Bewerk worstlist</value>
  </data>
  <data name="FileName" xml:space="preserve">
    <value>Bestandsnaam</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>Hoe werkt dit?</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>Hier kunt u wordlist importeren. Klik eerst op de %Nieuw% knop hierboven. U zult een %Wordlist Type% kunnen specificeren (meer informatie hierover later), een %Naam% en een %Doel%. U heeft twee opties om uw bestand te uploaden. De eerste optie is om het te uploaden naar de server waarop de instantie van OpenBullet2 draait. Dit is de voorkeursmethode als de worstlist op de client staat van waaruit u OB2 benadert word via de browser, maar als OB2 op een andere machine wordt gehost. Deze methode voor het toevoegen van een wordlist voegt wat overhead toe, aangezien de worstlist moet worden geüpload via de browser.</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>%Als de wordlist op de server% staat, wat betekent dat u een bestand probeert op te halen van dezelfde machine waarop OB2 draait, kunt u de optie %File System% gebruiken, waarmee u visueel door mappen kunt bladeren op zoek naar het gewenste bestand. Merk op dat om toegang te krijgen tot locaties op de schijf die buiten de huidige werkdirectory van OB2 liggen, u naar OpenBullet's beveiligingsopties moet gaan en systeembrede bestandstoegang moet toestaan.</value>
  </data>
  <data name="Help1x03" xml:space="preserve">
    <value>Met betrekking tot het %Wordlist Type%, u vindt de momenteel gespecificeerde typen wordlist in het bestand %Settings / Environment.ini% in uw OB2-directory. Wordlist typen worden geladen wanneer OB2 opstart. U kunt dit bestand wijzigen en wordlists typen toevoegen / verwijderen / wijzigen zodat deze overeenkomen met het formaat van uw wordlists. U kunt meer lezen over typen wordlists in de sectie met handleidingen van het officiële forum.</value>
  </data>
  <data name="KeepFile" xml:space="preserve">
    <value>Nee, bewaar het bestand</value>
  </data>
  <data name="Lines" xml:space="preserve">
    <value>Lijnen</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Bezig met laden</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Naam</value>
  </data>
  <data name="NoRecordsToDisplay" xml:space="preserve">
    <value>Geen records om weer te geven</value>
  </data>
  <data name="NoWordlistSelected" xml:space="preserve">
    <value>U moet eerst een wordlist selecteren</value>
  </data>
  <data name="Purpose" xml:space="preserve">
    <value>Doel</value>
  </data>
  <data name="ReallyDelete" xml:space="preserve">
    <value>Wil je dit echt verwijderen</value>
  </data>
  <data name="results" xml:space="preserve">
    <value>resultaten</value>
  </data>
  <data name="ResultsPerPage" xml:space="preserve">
    <value>resultaten per pagina</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Uh-Oh" xml:space="preserve">
    <value>Uh-Oh</value>
  </data>
</root>
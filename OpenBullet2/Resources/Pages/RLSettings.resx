<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="2CaptchaApiKey" xml:space="preserve">
    <value>2Captcha API Key</value>
  </data>
  <data name="9KWApiKey" xml:space="preserve">
    <value>9kw API Key</value>
  </data>
  <data name="AntiCaptchaApiKey" xml:space="preserve">
    <value>Anti-Captcha API Key</value>
  </data>
  <data name="AnyCaptchaApiKey" xml:space="preserve">
    <value>AnyCaptcha API Key</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="AZCaptchaApiKey" xml:space="preserve">
    <value>AZ Captcha API Key</value>
  </data>
  <data name="Balance" xml:space="preserve">
    <value>Balance</value>
  </data>
  <data name="BrowserType" xml:space="preserve">
    <value>Browser Type</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CapMonsterHost" xml:space="preserve">
    <value>CapMonster Host</value>
  </data>
  <data name="CapMonsterPort" xml:space="preserve">
    <value>CapMonster Port</value>
  </data>
  <data name="Captchas" xml:space="preserve">
    <value>Captchas</value>
  </data>
  <data name="CaptchasDotIoApiKey" xml:space="preserve">
    <value>Captchas.IO API Key</value>
  </data>
  <data name="CheckBalance" xml:space="preserve">
    <value>Check balance</value>
  </data>
  <data name="CheckBalanceBeforeSolving" xml:space="preserve">
    <value>Check the account balance before solving the captcha</value>
  </data>
  <data name="ChromeBinaryLocation" xml:space="preserve">
    <value>Chrome binary location</value>
  </data>
  <data name="ConnectTimeoutMilliseconds" xml:space="preserve">
    <value>Connect timeout (milliseconds)</value>
  </data>
  <data name="CurrentService" xml:space="preserve">
    <value>Current service</value>
  </data>
  <data name="Custom2CaptchaApiKey" xml:space="preserve">
    <value>Custom 2Captcha API Key</value>
  </data>
  <data name="Custom2CaptchaHost" xml:space="preserve">
    <value>Custom 2Captcha Host</value>
  </data>
  <data name="Custom2CaptchaOverrideHostHeader" xml:space="preserve">
    <value>Override Host header with 2captcha.com</value>
  </data>
  <data name="Custom2CaptchaPort" xml:space="preserve">
    <value>Custom 2Captcha Port</value>
  </data>
  <data name="CustomAntiCaptchaApiKey" xml:space="preserve">
    <value>Custom AntiCaptcha API Key</value>
  </data>
  <data name="CustomAntiCaptchaHost" xml:space="preserve">
    <value>Custom AntiCaptcha Host</value>
  </data>
  <data name="CustomAntiCaptchaPort" xml:space="preserve">
    <value>Custom AntiCaptcha Port</value>
  </data>
  <data name="DeathByCaptcha Username" xml:space="preserve">
    <value>Death By Captcha Username</value>
  </data>
  <data name="DeathByCaptchaPassword" xml:space="preserve">
    <value>Death By Captcha Password</value>
  </data>
  <data name="DeCaptcherPassword" xml:space="preserve">
    <value>DeCaptcher Password</value>
  </data>
  <data name="DeCaptcherUsername" xml:space="preserve">
    <value>DeCaptcher Username</value>
  </data>
  <data name="DrawMouseMovement" xml:space="preserve">
    <value>Draw mouse movement</value>
  </data>
  <data name="EnableBotLogging" xml:space="preserve">
    <value>Enable bot logging</value>
  </data>
  <data name="FirefoxBinaryLocation" xml:space="preserve">
    <value>Firefox binary location</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="GlobalBanKeys" xml:space="preserve">
    <value>Global ban keys</value>
  </data>
  <data name="GlobalRetryKeys" xml:space="preserve">
    <value>Global retry keys</value>
  </data>
  <data name="ImageTyperzApiKey" xml:space="preserve">
    <value>Imagetyperz API Key</value>
  </data>
  <data name="LogJobActivityToFile" xml:space="preserve">
    <value>Log job activity to file</value>
  </data>
  <data name="LogAllResults" xml:space="preserve">
    <value>Log all results to the job log file (WARN: Can result in high disk usage due to the amount of lines from each job!)</value>
  </data>
  <data name="ParallelizerType" xml:space="preserve">
    <value>Parallelizer Type</value>
  </data>
  <data name="PollingIntervalMilliseconds" xml:space="preserve">
    <value>Polling interval in milliseconds</value>
  </data>
  <data name="Proxies" xml:space="preserve">
    <value>Proxies</value>
  </data>
  <data name="Puppeteer" xml:space="preserve">
    <value>Puppeteer</value>
  </data>
  <data name="ReadWriteTimeoutMilliseconds" xml:space="preserve">
    <value>Read/Write timeout (milliseconds)</value>
  </data>
  <data name="RestoreDefaults" xml:space="preserve">
    <value>Restore Defaults</value>
  </data>
  <data name="RestoreDefaultSettingsConfirmation" xml:space="preserve">
    <value>Do you want to restore the default settings?</value>
  </data>
  <data name="RestrictBlocksToCWD" xml:space="preserve">
    <value>Restrict blocks I/O capabilities to the Current Working Directory only</value>
  </data>
  <data name="RuCaptchaApiKey" xml:space="preserve">
    <value>RuCaptcha API Key</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Saved" xml:space="preserve">
    <value>Saved</value>
  </data>
  <data name="SelectedBrowser" xml:space="preserve">
    <value>Selected browser</value>
  </data>
  <data name="Selenium" xml:space="preserve">
    <value>Selenium</value>
  </data>
  <data name="SettingsSaved" xml:space="preserve">
    <value>The settings were successfully saved.</value>
  </data>
  <data name="SolveCaptchaApiKey" xml:space="preserve">
    <value>SolveCaptcha API Key</value>
  </data>
  <data name="SolveRecaptchaApiKey" xml:space="preserve">
    <value>SolveRecaptcha API Key</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="TimeoutSeconds" xml:space="preserve">
    <value>Timeout in seconds</value>
  </data>
  <data name="TrueCaptchaApiKey" xml:space="preserve">
    <value>TrueCaptcha API Key</value>
  </data>
  <data name="TrueCaptchaUsername" xml:space="preserve">
    <value>TrueCaptcha Username</value>
  </data>
  <data name="UseCustomUserAgentsList" xml:space="preserve">
    <value>Use custom User Agents list</value>
  </data>
  <data name="UserAgents" xml:space="preserve">
    <value>User Agents</value>
  </data>
  <data name="VerboseMode" xml:space="preserve">
    <value>Verbose mode</value>
  </data>
  <data name="CapSolverApiKey" xml:space="preserve">
    <value>CapSolver API Key</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Ekle</value>
  </data>
  <data name="AddBlank" xml:space="preserve">
    <value>Boşluk Ekle</value>
  </data>
  <data name="AllowedProxyTypes" xml:space="preserve">
    <value>İzin verilen proksi türleri</value>
  </data>
  <data name="AllowedWordlistTypes" xml:space="preserve">
    <value>İzin verilen kelime listesi türleri</value>
  </data>
  <data name="AlwaysOpenBrowser" xml:space="preserve">
    <value>Tarayıcıyı her zaman başlangıçta aç</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Emin misin?</value>
  </data>
  <data name="BanLoopEvasion" xml:space="preserve">
    <value>Yasak döngüsünden kaçınma diğer bir deyişle ne kadar YASAK durumundan sonra, veri satırını KONTROL-ET olarak işaretlenmeli ve proksi yasaklanmalıdır (devredışı bırakmak için 0)</value>
  </data>
  <data name="BanStatuses" xml:space="preserve">
    <value>Bot bu durumlardan biriyle bittiğinde proksiyi yasakla</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>İptal</value>
  </data>
  <data name="CaseSensitive" xml:space="preserve">
    <value>Harfe duyarlı</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Temizle</value>
  </data>
  <data name="ContinueStopStatuses" xml:space="preserve">
    <value>Botun devam edeceği / duracağı durumlar</value>
  </data>
  <data name="CPMLimit" xml:space="preserve">
    <value>CPM Limiti (sınır yoksa 0)</value>
  </data>
  <data name="CustomInputs" xml:space="preserve">
    <value>Özel Girişler</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>Veri</value>
  </data>
  <data name="DataRules" xml:space="preserve">
    <value>Veri Kuralları</value>
  </data>
  <data name="DefaultAnswer" xml:space="preserve">
    <value>Varsayılan Cevap</value>
  </data>
  <data name="DisableWebpagesNotifications" xml:space="preserve">
    <value>Web sayfalarından gelen bildirimleri devre dışı bırak</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>Genel</value>
  </data>
  <data name="Headless" xml:space="preserve">
    <value>Başsız</value>
  </data>
  <data name="IgnoreHttpsErrors" xml:space="preserve">
    <value>HTTPS hatalarını yoksay</value>
  </data>
  <data name="IgnoreResponseErrors" xml:space="preserve">
    <value>Yanıt hatalarını yoksay</value>
  </data>
  <data name="InputDescription" xml:space="preserve">
    <value>DAçıklama (kullanıcı için soru)</value>
  </data>
  <data name="Inputs" xml:space="preserve">
    <value>Girişler</value>
  </data>
  <data name="InputsDescription" xml:space="preserve">
    <value>Özel girdiler, bazı değerleri doğrudan çalışma-zamanında tanımlamanın bir yoludur. Yapılandırmanın kullanıcıları, bir işe başladıklarında bazı açılır pencereler alacaklar ve yanıtları, istediğiniz gibi kullanabileceğiniz bir tür dize değişkeni olarak eklenecektir.</value>
  </data>
  <data name="Invert" xml:space="preserve">
    <value>Ters çevir</value>
  </data>
  <data name="MaxUsesPerProxy" xml:space="preserve">
    <value>Proksi başına maksimum kullanım (0 sonsuzdur)</value>
  </data>
  <data name="Proxies" xml:space="preserve">
    <value>Proksiler</value>
  </data>
  <data name="Puppeteer" xml:space="preserve">
    <value>Kuklacı</value>
  </data>
  <data name="PuppeteerCommandLineArguments" xml:space="preserve">
    <value>Komut satırı argümanları (ör. --devredışı-bildirimler --kimliği gizli)</value>
  </data>
  <data name="PuppeteerUserAgent" xml:space="preserve">
    <value>Kullanıcı Aracısı (boşsa varsayılan)</value>
  </data>
  <data name="QuitBrowserStatuses" xml:space="preserve">
    <value>Bot bu durumlardan biriyle bittiğinde tarayıcıdan çıkın</value>
  </data>
  <data name="RandomUserAgent" xml:space="preserve">
    <value>Rastgele Kullanıcı Aracısı</value>
  </data>
  <data name="RegexRule" xml:space="preserve">
    <value>Regex kuralı</value>
  </data>
  <data name="RegexToMatch" xml:space="preserve">
    <value>Eşleşecek regex</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Sil</value>
  </data>
  <data name="Requests" xml:space="preserve">
    <value>İstekler</value>
  </data>
  <data name="RestoreDefaults" xml:space="preserve">
    <value>Varsayılanları Geri Yükle</value>
  </data>
  <data name="RestoreDefaultSettingsConfirmation" xml:space="preserve">
    <value>Varsayılan ayarları geri yüklemek istiyor musunuz?</value>
  </data>
  <data name="SaveEmptyCaptures" xml:space="preserve">
    <value>Boş yakalamaları da kaydet</value>
  </data>
  <data name="SimpleRule" xml:space="preserve">
    <value>Basit kural</value>
  </data>
  <data name="SliceName" xml:space="preserve">
    <value>Dilim ismi</value>
  </data>
  <data name="SuggestedBots" xml:space="preserve">
    <value>Önerilen Bot miktarı</value>
  </data>
  <data name="ToggleRegexHelper" xml:space="preserve">
    <value>Regex Yardımcısını Değiştir</value>
  </data>
  <data name="UrlEncodeAfterSlicing" xml:space="preserve">
    <value>Dilimlemeden sonra URL verilerini kodla</value>
  </data>
  <data name="UseProxies" xml:space="preserve">
    <value>Proksiler kullan</value>
  </data>
  <data name="VariableName" xml:space="preserve">
    <value>Değişken ismi</value>
  </data>
</root>
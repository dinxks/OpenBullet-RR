<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessExpiration" xml:space="preserve">
    <value>Access expiration</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Thêm</value>
  </data>
  <data name="AddGuest" xml:space="preserve">
    <value>Thêm người dùng khách</value>
  </data>
  <data name="AllowedAddresses" xml:space="preserve">
    <value>Địa chỉ được cho phép</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Bạn chắc chứ</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Thoát</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Xoá</value>
  </data>
  <data name="EditGuest" xml:space="preserve">
    <value>Chỉnh sửa người dùng khách</value>
  </data>
  <data name="EditInfo" xml:space="preserve">
    <value>Chỉnh sửa thông tin</value>
  </data>
  <data name="EditPassword" xml:space="preserve">
    <value>Đổi mật khẩu</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>Nó hoạt động như thế nào</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>OpenBullet 2 cho phép bạn tạo tài khoản cho %người dùng khách%, nó có thể truy cập vào server OpenBullet 2 của bạn. Trước tiên, nhớ bật tùy chọn %Yêu cầu đăng nhập tài khoản admin% trong %cài đặt bảo mật% của OB. Việc này sẽ đảm bảo mọi người với đường link tới server này sẽ thấy được màn hình đăng nhập khi mới vào. Để cho mọi người có thể kết nối tới server này, bạn sẽ phải %mở các port% trên router của bạn và cài đặt %các luật của firewall% trên máy. Những thứ này thường được làm sẵn khi dùng VPS, đây là một cách được khuyến khích khi bạn muốn mở công khai server OpenBullet 2.</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>Ở phần %cài đặt bảo mật%, bạn cũng có thể khai báo %Thời gian chạy tối đa của tài khoản admin%, nó là số giờ mà người dùng khách được phép đăng nhập sau lần đăng nhập trước. Chức năng này hữu ích vì bạn sẽ không muốn người dùng khách có khả năng truy cập vô thời hạn tới server. Lưu ý rằng một khi server đã tạo một %token% có hiệu lực cho người dùng khách, nó sẽ có hiệu lực cho tới khi nó hết hạn, nên thậm chí nếu bạn xóa một người dùng khách khỏi băng ở trên, nó vẫn sẽ có thể dùng được OpenBullet 2 của bạn cho tới khi token hết hiệu lực.</value>
  </data>
  <data name="Help1x03" xml:space="preserve">
    <value>Bằng cách click vào nút %Thêm% ở trên, bạn sẽ có thể tạo %thông tin đăng nhập% cho người dùng khách mới, chỉnh %thời hạn truy cập% (sau thời gian đó, server sẽ không gửi token có hiệu lực tới người dùng khách nữa) và có thể tùy ý thiết lập một vài %Địa chỉ IP% mà người dùng khách được cho phép để kết nối từ địa chỉ ấy. Chức năng này hữu ích để ngăn chặn các người dùng khách chia sẻ tài khoản của họ với người khác.</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Đang tải</value>
  </data>
  <data name="NewPasswordForGuest" xml:space="preserve">
    <value>Mật khẩu mới</value>
  </data>
  <data name="NoGuestSelectedWarning" xml:space="preserve">
    <value>Bạn cần chọn profile trước</value>
  </data>
  <data name="NoRecordsToDisplay" xml:space="preserve">
    <value>Không có bản ghi nào để hiện thị</value>
  </data>
  <data name="ReallyDelete" xml:space="preserve">
    <value>Bạn có muốn xoá?</value>
  </data>
  <data name="DeleteEverything" xml:space="preserve">
    <value>Bạn có  thực sự muốn xoá ko?</value>
  </data>
  <data name="DeleteEverythingMessage" xml:space="preserve">
    <value>Bạn có thực sự muốn xoá tất cả?</value>
  </data>
  <data name="results" xml:space="preserve">
    <value>kết quả</value>
  </data>
  <data name="ResultsPerPage" xml:space="preserve">
    <value>Số kết quả mỗi trang</value>
  </data>
  <data name="Uh-Oh" xml:space="preserve">
    <value>Uh-Oh</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Tên tài khoản</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllDone" xml:space="preserve">
    <value>تمام شد!</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>مطمئنی؟</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>سازنده</value>
  </data>
  <data name="by" xml:space="preserve">
    <value>توسط</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>کنسل</value>
  </data>
  <data name="CannotDownloadRemoteConfig" xml:space="preserve">
    <value>کانفیگ ها از راه دور بارگیری نمی شود</value>
  </data>
  <data name="CannotEditRemoteConfig" xml:space="preserve">
    <value>کانفیگ از راه دور قابل ویرایش نیست</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>موضوع ها</value>
  </data>
  <data name="ConfigReloadWarning" xml:space="preserve">
    <value>با این کار همه کانفیگ ها از دیسک بارگیری می شود ، بنابراین تمام تغییرات ذخیره نشده از بین می روند. آیا شما می خواهید ادامه دهید؟</value>
  </data>
  <data name="ConfigsSuccessfullyUploaded" xml:space="preserve">
    <value>کانفیگ ها با موفقیت بارگذاری شدند</value>
  </data>
  <data name="ConfigWarningMessage" xml:space="preserve">
    <value>هشدار پیکربندی ها حاوی کد C # هستند که بدون هیچ گونه بررسی خودکار رفتارهای مخرب اجرا می شوند. اگر از تنظیمات ساخته شده توسط اشخاص ثالث استفاده می کنید ، این مسئولیت شماست که مطمئن شوید پیکربندی ها دقیقاً همان کاری را انجام می دهند که قرار است انجام دهند و هیچ چیز سایه ای در جریان نیست. اگر به منبع اصلی کاملاً اعتماد ندارید ، همیشه خودتان کد LoliCode / C # را بررسی کنید.</value>
  </data>
  <data name="CreationDate" xml:space="preserve">
    <value>تاریخ ایجاد</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>پاک کردن</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>دانلود</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>ویرایش</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>کانفیگ چیست ؟</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>٪ کانفیگ٪ فایلی است که شامل دستورالعمل هایی برای خودکار کردن برخی اقدامات ، معمولاً به سمت منابع وب است. پیکربندی ها حاوی٪٪ فراداده٪ (مانند نام ، نویسنده و نماد) ،٪ خواندن٪ به همراه دستورالعمل هایی برای نحوه استفاده از آن یا برای چه چیزی است ، برخی تنظیمات و سپس دستورالعمل هایی که می توانند در٪ لولی کد٪ سفارشی باشند زبان برنامه نویسی یا به صورت خالص٪ C#٪. در دیسک ، کانفیگ ها به عنوان پرونده هایی با پسوند٪ .opk٪ در پوشه٪ کانفیگ ها٪ ذخیره می شوند.</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>می توان از کانفیگ در مشاغلی مانند٪ مولتی ران شغل٪ استفاده کرد تا به طور موازی برخی از دستورالعمل ها را در یک مجموعه داده خاص (به عنوان مثال لیست کلمات) اجرا کند. به عنوان مثال ، می توان از آنها برای بررسی اینکه آیا زیرمسیرهای خاصی از یک وب سایت پاسخ معتبری دریافت می کند ، یا می توان آنها را برای کش رفتن لینک از چندین صفحه از یک فروشگاه آنلاین استفاده کرد.</value>
  </data>
  <data name="Help2x00" xml:space="preserve">
    <value>کانفیگ منیجر چگونه کار میکند ؟ </value>
  </data>
  <data name="Help2x01" xml:space="preserve">
    <value>٪کانفیگ منیجر٪ کانفیگ های شما را ردیابی می کند. هنگام راه اندازی OB2 ، کانفیگ ها از زیر پوشه کانفیگ بارگیری می شوند و اگر برخی از پیکربندی های جدید به آن پوشه اضافه شوند ، می توانید٪ اسکن٪ را بزنید تا روند بارگیری مجدد شروع شود. اگر دسترسی آسانی به پوشه کانفیگ ندارید (به عنوان مثال اگر OB2 روی سرور  اجرا می شود) می توانید٪ را با دکمه مربوط٪ بارگذاری کنید. همچنین می توانید٪ پیکربندی های موجود را به همان روش بارگیری کنید.</value>
  </data>
  <data name="Help2x02" xml:space="preserve">
    <value>در بالا می توانید دکمه٪جدید٪ را پیدا کنید که کانفیگ جدیدی ایجاد می کند. برای ویرایش٪ a٪ کانفیگ می توانید بر روی دکمه ویرایش یا دوبار کلیک بر روی کانفیگ لیست کلیک کنید. همچنین دکمه ای برای تغییر٪ مشاهده به نمای شبکه با جزئیات بیشتر وجود دارد.</value>
  </data>
  <data name="Help3x00" xml:space="preserve">
    <value>فایل .opk چیست؟</value>
  </data>
  <data name="Help3x01" xml:space="preserve">
    <value>یک پرونده٪ .opk٪ یک٪ zip بایگانی٪ است که حاوی برخی از پرونده ها در داخل آن است. اولین پرونده٪ metadata.json٪ است که شامل نام ، نویسنده و نماد کانفیگ است. نماد یک تصویر کد شده با پایه 64 است که می تواند یک گیف نیز باشد. پرونده٪ readme.md٪ حاوی توصیفی ازکانفیگ است ، هنگام باز کردن منوی انتخاب کانفیگ در هنگام راه اندازی کار ، به کاربر نشان داده می شود. از زبان علامت گذاری پشتیبانی می کند. پرونده٪ settings.json٪ حاوی تنظیمات خاص کانفیگ است.</value>
  </data>
  <data name="Help3x02" xml:space="preserve">
    <value>سرانجام ، اگر کانفیگ شما از استکر استفاده کند ، دستورالعمل ها به عنوان یک اسکریپت لولی کد در داخل فایل٪ script.loli٪ ذخیره می شوند. اگر در عوض تصمیم گرفتید کانفیگ خود را فقط به C# تبدیل کنید ، فایلی به نام٪ script.cs٪ با کد C# برای اجرا ایجاد می شود.</value>
  </data>
  <data name="LastModified" xml:space="preserve">
    <value>آخرین اصلاح شده</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>بارگذاری</value>
  </data>
  <data name="LocalConfigs" xml:space="preserve">
    <value>کانفیگ های محلی</value>
  </data>
  <data name="MissingPlugin" xml:space="preserve">
    <value>پلاگین موجود نیست</value>
  </data>
  <data name="MissingPluginText" xml:space="preserve">
    <value>کانفیگ ها با این پلاگین ساخته شده است ، اما موجود نیست</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>اسم</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>جدید</value>
  </data>
  <data name="NoConfigSelectedWarning" xml:space="preserve">
    <value>به نظر می رسد شما هیچ کانفیگی را انتخاب نکرده اید!</value>
  </data>
  <data name="Proxies" xml:space="preserve">
    <value>پروکسی ها</value>
  </data>
  <data name="ReallyDelete" xml:space="preserve">
    <value>آیا واقعاً می خواهید حذف کنید</value>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>بارگذاری</value>
  </data>
  <data name="Remote" xml:space="preserve">
    <value>کنترل</value>
  </data>
  <data name="RemoteConfig" xml:space="preserve">
    <value>کنترل کانفیگ</value>
  </data>
  <data name="RemoteConfigs" xml:space="preserve">
    <value>کنترل کانفیگ ها</value>
  </data>
  <data name="ToggleView" xml:space="preserve">
    <value>تغییر وضعیت</value>
  </data>
  <data name="Uh-Oh" xml:space="preserve">
    <value>اوه شت</value>
  </data>
  <data name="UnsavedChanges" xml:space="preserve">
    <value>تغییرات ذخیره نشده</value>
  </data>
  <data name="UnsavedChangesText" xml:space="preserve">
    <value>کانفیگ های فعلی  ذخیره نشده اند ! میخوای ادامه بدی؟</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>آپلود</value>
  </data>
  <data name="WARNING" xml:space="preserve">
    <value>هشدار</value>
  </data>
  <data name="Wordlists" xml:space="preserve">
    <value>کمبو لیست ها</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Actions" xml:space="preserve">
    <value>Действия</value>
  </data>
  <data name="ActionsDescription" xml:space="preserve">
    <value>Выполняется последовательно</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>Активный</value>
  </data>
  <data name="AliveProxies" xml:space="preserve">
    <value>Живые прокси-серверы</value>
  </data>
  <data name="BannedProxies" xml:space="preserve">
    <value>Запрещенные прокси-серверы</value>
  </data>
  <data name="Bans" xml:space="preserve">
    <value>Запрещает</value>
  </data>
  <data name="CaptchaCredit" xml:space="preserve">
    <value>Зачетная капча</value>
  </data>
  <data name="CPM" xml:space="preserve">
    <value>CPM</value>
  </data>
  <data name="Customs" xml:space="preserve">
    <value>Таможня</value>
  </data>
  <data name="days" xml:space="preserve">
    <value>дней</value>
  </data>
  <data name="EditAction" xml:space="preserve">
    <value>Редактировать действие</value>
  </data>
  <data name="EditTrigger" xml:space="preserve">
    <value>Редактировать триггер</value>
  </data>
  <data name="Errors" xml:space="preserve">
    <value>Ошибки</value>
  </data>
  <data name="Executing" xml:space="preserve">
    <value>Выполнение</value>
  </data>
  <data name="Executions" xml:space="preserve">
    <value>Казни</value>
  </data>
  <data name="Fails" xml:space="preserve">
    <value>Провалы</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>Как это работает?</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>Это %Job Monitor%, который содержит список %triggered actions%. Триггерные действия отвечают за мониторинг задания, проверку наличия триггеров и выполнение действий. Прежде всего, необходимо задать %id% задания для мониторинга в числовом текстовом поле. Не забудьте снять флажок %active% при настройке триггеров и действий, чтобы избежать их случайного выполнения, когда вы еще не закончили работу над ними.</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>Затем следует добавить несколько %триггеров% и %действий%. Как только все условия срабатывания станут истинными, монитор заданий выполнит все указанные вами %действия% в последовательном порядке, пока они не будут исчерпаны. После выполнения действий счетчик %executions% будет увеличиваться. Если триггерное действие отмечено как %повторяемое%, триггеры будут совпадать несколько раз, в противном случае триггерное действие установит себя как неактивное и больше не сработает.</value>
  </data>
  <data name="Help1x03" xml:space="preserve">
    <value>Кнопка %Reset% сбросит количество выполнений до 0. Триггерные действия сохраняются в файле %triggeredActions.json%, поэтому если вы хотите создать резервную копию или перенести их в другой экземпляр OB, вам следует скопировать этот файл.</value>
  </data>
  <data name="Hits" xml:space="preserve">
    <value>Хиты</value>
  </data>
  <data name="hours" xml:space="preserve">
    <value>часы</value>
  </data>
  <data name="inJob" xml:space="preserve">
    <value>в работе</value>
  </data>
  <data name="Job" xml:space="preserve">
    <value>Работа</value>
  </data>
  <data name="JobFinished" xml:space="preserve">
    <value>Работа завершена</value>
  </data>
  <data name="JobStatus" xml:space="preserve">
    <value>Статус работы</value>
  </data>
  <data name="minutes" xml:space="preserve">
    <value>минут</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Новый</value>
  </data>
  <data name="onWebhook" xml:space="preserve">
    <value>веб-крючок</value>
  </data>
  <data name="Progress" xml:space="preserve">
    <value>Прогресс</value>
  </data>
  <data name="ReloadProxies" xml:space="preserve">
    <value>Перезагрузка прокси-серверов</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Удалить</value>
  </data>
  <data name="RemoveAll" xml:space="preserve">
    <value>Удалить все</value>
  </data>
  <data name="Repeatable" xml:space="preserve">
    <value>Повторяющийся</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Сброс</value>
  </data>
  <data name="Retries" xml:space="preserve">
    <value>Повторные попытки</value>
  </data>
  <data name="seconds" xml:space="preserve">
    <value>секунды</value>
  </data>
  <data name="SelectActionType" xml:space="preserve">
    <value>Выберите тип действия</value>
  </data>
  <data name="SelectTriggerType" xml:space="preserve">
    <value>Выберите тип триггера</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Отправить</value>
  </data>
  <data name="SetBotsTo" xml:space="preserve">
    <value>Установите ботов на</value>
  </data>
  <data name="SetRelativeTimeTo" xml:space="preserve">
    <value>Установите относительное время на</value>
  </data>
  <data name="StartJob" xml:space="preserve">
    <value>Начать работу</value>
  </data>
  <data name="StopJob" xml:space="preserve">
    <value>Остановить работу</value>
  </data>
  <data name="Tested" xml:space="preserve">
    <value>Проверено</value>
  </data>
  <data name="TimeElapsed" xml:space="preserve">
    <value>Прошедшее время</value>
  </data>
  <data name="TimeRemaining" xml:space="preserve">
    <value>Оставшееся время</value>
  </data>
  <data name="ToChecks" xml:space="preserve">
    <value>К чекам</value>
  </data>
  <data name="Triggers" xml:space="preserve">
    <value>Триггеры</value>
  </data>
  <data name="TriggersDescription" xml:space="preserve">
    <value>Все они должны быть проверены одновременно</value>
  </data>
  <data name="Wait" xml:space="preserve">
    <value>Подождите</value>
  </data>
  <data name="inChat" xml:space="preserve">
    <value>в чате</value>
  </data>
  <data name="AbortJob" xml:space="preserve">
    <value>Прервать работу</value>
  </data>
</root>
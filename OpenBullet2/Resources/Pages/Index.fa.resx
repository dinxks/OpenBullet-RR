<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AuthenticatedAs" xml:space="preserve">
    <value>احراز هویت به عنوان</value>
  </data>
  <data name="BuildNumber" xml:space="preserve">
    <value>شماره ساخت</value>
  </data>
  <data name="ClientIpAddress" xml:space="preserve">
    <value>آدرس IP کاربر</value>
  </data>
  <data name="CPUUsage" xml:space="preserve">
    <value>میزان استفاده از پردازنده</value>
  </data>
  <data name="CurrentWorkingDirectory" xml:space="preserve">
    <value>فهرست کار فعلی</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>کمک</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>استقبال گرم از لیل توبا</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>سلام و به٪ اوپن بولت 2٪ خوش آمدید ، من٪ لیل توبا٪ هستم و راهنمای شما در اینجا خواهم بود. به دنبال پیوندهای راهنما باشید و من می آیم تا هر آنچه را که نیاز دارید توضیح دهم!</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>شما را آزار نخواهم داد ، تا زمانی دیگر شما را می بینم. خداحافظ</value>
  </data>
  <data name="Help2x00" xml:space="preserve">
    <value>همه تنظیمات من در کجا ذخیره شده است؟</value>
  </data>
  <data name="Help2x01" xml:space="preserve">
    <value>تنظیمات زیادی در OpenBullet 2 وجود دارد و آنها در داخل پوشه٪ UserData٪ ذخیره می شوند. ٪ database٪ (به طور پیش فرض SQLite) فایلی است که شامل پروکسی ها ، مشاغل ، بازدیدها ، مهمان ها و همچنین سوابق مکان لیست کلمات شما را روی دیسک نگهداری می کند. به طور پیش فرض٪ OpenBullet.db٪ نامیده می شود. ٪ Configs٪ درون پوشه Configs هستند ، در حالیکه٪ Wordlists٪ هایی که از طریق ویژگی بارگذاری مرورگر وارد کرده اید در داخل پوشه Wordlists قرار دارند. برای اطلاعات بیشتر به بخشهای خاص آنها مراجعه کنید.</value>
  </data>
  <data name="Help2x02" xml:space="preserve">
    <value>تنظیمات OpenBullet و RuriLib در دو فایل ذخیره می شوند:٪ OpenBulletSettings.json٪ و٪ RuriLibSettings.json٪. این پرونده ها فقط درصورتی ایجاد می شوند که در تنظیمات پیش فرض تغییراتی ایجاد شده باشد. پرونده٪ Environment.ini٪٪٪ Wordlist Types٪،٪ Custom Statuses٪ و٪ Export Formats٪ محیط OB2 شما را مشخص می کند. این یک فایل بسیار مهم است ، اطلاعات بیشتر در مورد انواع لیست های ورد را می توان در یک راهنمای جداگانه یافت.</value>
  </data>
  <data name="Help2x03" xml:space="preserve">
    <value>پرونده٪ sharingEndpoints.json٪ اطلاعات نقاط پایانی شما را برای به اشتراک گذاری پیکربندی در خود نگه می دارد. سرانجام ، پرونده٪ triggeredActions.json٪ تمام٪ Triggered Actions٪ از مانیتور شغلی شما را نگهداری می کند. اقدامات راه اندازی شده هر 10 ثانیه به طور خودکار در این پرونده ذخیره می شوند.</value>
  </data>
  <data name="LocalTime" xml:space="preserve">
    <value>زمان محلی</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>خروج</value>
  </data>
  <data name="MemoryUsage" xml:space="preserve">
    <value>استفاده از حافظه</value>
  </data>
  <data name="NetworkUsage" xml:space="preserve">
    <value>استفاده از شبکه</value>
  </data>
  <data name="OperatingSystem" xml:space="preserve">
    <value>سیستم عامل</value>
  </data>
  <data name="WebserverUptime" xml:space="preserve">
    <value>آپ تایم وب سرور</value>
  </data>
  <data name="WelcomeMessage" xml:space="preserve">
    <value>به OpenBullet 2 خوش آمدید</value>
  </data>
</root>
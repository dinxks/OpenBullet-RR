<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AuthenticatedAs" xml:space="preserve">
    <value>Tên</value>
  </data>
  <data name="BuildNumber" xml:space="preserve">
    <value>Phiên bản</value>
  </data>
  <data name="ClientIpAddress" xml:space="preserve">
    <value>Địa chỉ IP</value>
  </data>
  <data name="CPUUsage" xml:space="preserve">
    <value>Lượng CPU đang dùng</value>
  </data>
  <data name="CurrentWorkingDirectory" xml:space="preserve">
    <value>Thư mục làm việc hiện tại</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>Bulletta gửi lời chào đón tới bạn.</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>Xin chào và chào mừng tới %OpenBullet 2%, tôi là %Bulletta% và tôi sẽ là người hướng dẫn của bạn. Hãy tìm các mục help và tôi sẽ giải thích những gì bạn cần</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>Không làm phiền bạn nữa, tôi sẽ gặp bạn sau. Byee!</value>
  </data>
  <data name="Help2x00" xml:space="preserve">
    <value>Tất cả các cài đặt của tôi được lưu ở đâu?</value>
  </data>
  <data name="Help2x01" xml:space="preserve">
    <value>Có rất nhiều cài đặt trong OpenBullet 2, và chúng được lưu trong foler %Dữ liệu người dùng%. %Cơ sở dữ liệu% (bởi SQLite mặc định) là một file chứa các proxy, tác vụ, hit, người dùng khách và còn giữ các bản ghi về vị trí danh sách tài khoản của bạn trên ổ đĩa. Mặc định, nó tên là %OpenBullet.db%. Các %config% ở trong folder con Configs, trong khi các %danh sách tài khoản% mà bạn thêm vào thông quan chức năng tải lên của trình duyệt ở trong thư mục con Wordlists. Tìm về các mục riêng của chúng nếu bạn cần thêm thông tin.</value>
  </data>
  <data name="Help2x02" xml:space="preserve">
    <value>Cài đặt của OpenBullet 2 và RuriLib được lưu trong 2 file: %OpenBulletSettings.json% và %RuriLibSettings.json%. Những file này chỉ được tạo nếu có một vài thay đổi so với mặc định. File %Environment.ini% xác định rõ %Loại Danh sách tài khoản%, %Trạng thái Tùy chỉnh% và %Định dạng xuất ra% trong môi trường OpenBullet 2 của bạn. File này là một file rất quan trọng, thông tin thêm về Loại Danh sách tài khoản có thể tìm thấy ở hướng dẫn khác.</value>
  </data>
  <data name="Help2x03" xml:space="preserve">
    <value>File %sharingEndpoints.json% giữ thông tin của endpoints của bạn để chia sẽ config. Cuối cùng, file %triggeredActions.json% giữ tất cả %Triggered Actions% của trình Giám sát Tác vụ. Triggered Actions được tự động lưu vào file này mỗi 10 giây.</value>
  </data>
  <data name="LocalTime" xml:space="preserve">
    <value>Giờ địa phương</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Đăng xuất</value>
  </data>
  <data name="MemoryUsage" xml:space="preserve">
    <value>Lượng RAM đang dùng</value>
  </data>
  <data name="NetworkUsage" xml:space="preserve">
    <value>Lưu lượng mạng</value>
  </data>
  <data name="OperatingSystem" xml:space="preserve">
    <value>Hệ điều hành</value>
  </data>
  <data name="WebserverUptime" xml:space="preserve">
    <value>Thời gian hoạt động</value>
  </data>
  <data name="WelcomeMessage" xml:space="preserve">
    <value>Chào mừng đến với OpenBullet 2!</value>
  </data>
</root>
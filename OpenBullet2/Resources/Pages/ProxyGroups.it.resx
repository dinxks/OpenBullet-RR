<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddGroup" xml:space="preserve">
    <value>Aggiungi Gruppo</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Tutti</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Sei sicuro/a?</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annulla</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Nazione</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Creato</value>
  </data>
  <data name="CreateProxyGroup" xml:space="preserve">
    <value>Crea gruppo proxy</value>
  </data>
  <data name="DeleteAllProxies" xml:space="preserve">
    <value>Cancella tutti</value>
  </data>
  <data name="Deleted" xml:space="preserve">
    <value>Cancellati</value>
  </data>
  <data name="DeleteFiltered" xml:space="preserve">
    <value>Cancella filtrati</value>
  </data>
  <data name="DeleteGroup" xml:space="preserve">
    <value>Rimuovi Gruppo</value>
  </data>
  <data name="DeleteNotWorking" xml:space="preserve">
    <value>Cancella non funzionanti</value>
  </data>
  <data name="DeleteSlow" xml:space="preserve">
    <value>Cancella lenti</value>
  </data>
  <data name="DeleteUntested" xml:space="preserve">
    <value>Cancella non testati</value>
  </data>
  <data name="EditGroup" xml:space="preserve">
    <value>Modifica Gruppo</value>
  </data>
  <data name="EditProxyGroup" xml:space="preserve">
    <value>Modifica gruppo di proxy</value>
  </data>
  <data name="ForThisGroup" xml:space="preserve">
    <value>Per questo gruppo</value>
  </data>
  <data name="GroupInUse" xml:space="preserve">
    <value>Gruppo in uso</value>
  </data>
  <data name="GroupInUseWarning" xml:space="preserve">
    <value>Un job sta utilizzando questo gruppo di proxy. Per favore termina il job, rimuovilo dal manager e riprova.</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>Come funziona?</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>Qui puoi importare i tuoi proxy in vari %gruppi%. I gruppi aiutano a mantenere i proxy organizzati e ti permettono di usare proxy diversi per job diversi. Prima di tutto dovresti creare un gruppo cliccando sul pulsante %Aggiungi Gruppo% qui sopra. Dagli semplicemente un nome. Assicurati che il nuovo gruppo sia selezionato e poi clicca su %Importa Proxy%.</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>Il menu %Importa Proxy% ti darà 3 modi di importare i tuoi proxy. Puoi %incollarli%, %caricare un file% o %scrivere l'URL% di una risorsa remota che fornisce i proxy in formato testuale (di solito uno per riga). Puoi anche specificare il %tipo%, %username% e %password% di default per i proxy. Alternativamente, puoi usare la %sintassi avanzata% descritta nel form per specificare il tipo, username e password per ogni singolo proxy.</value>
  </data>
  <data name="Help1x03" xml:space="preserve">
    <value>Ora sei pronto e potrai selezionare il tuo gruppo di proxy quando crei o modifichi un job. Puoi creare un job del tipo %Proxy Check% per testare se i tuoi proxy funzionano prima di usarli. Il job Proxy Check aggiornerà i campi %nazione%, %stato%, %ping% e %ultimo check% dei proxy nella tabella che vedi in questa pagina, così puoi %rimuovere% i proxy che non funzionano o che hanno un ping troppo alto. Puoi persino decidere di tenere soltanto i proxy di una specifica nazione!</value>
  </data>
  <data name="Host" xml:space="preserve">
    <value>Host</value>
  </data>
  <data name="Imported" xml:space="preserve">
    <value>Importati</value>
  </data>
  <data name="ImportProxies" xml:space="preserve">
    <value>Importa Proxy</value>
  </data>
  <data name="LastChecked" xml:space="preserve">
    <value>Ultimo Controllo</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Caricamento</value>
  </data>
  <data name="Moved" xml:space="preserve">
    <value>Spostati</value>
  </data>
  <data name="MoveFiltered" xml:space="preserve">
    <value>Sposta filtrati</value>
  </data>
  <data name="NeedTwoOrMoreGroups" xml:space="preserve">
    <value>Sono necessari due o più gruppi</value>
  </data>
  <data name="NoGroupSelected" xml:space="preserve">
    <value>Per favore seleziona un gruppo prima</value>
  </data>
  <data name="NoRecordsToDisplay" xml:space="preserve">
    <value>Nessun proxy trovato</value>
  </data>
  <data name="NotWorking" xml:space="preserve">
    <value>Non funzionanti</value>
  </data>
  <data name="Owner" xml:space="preserve">
    <value>Proprietario</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Ping" xml:space="preserve">
    <value>Ping</value>
  </data>
  <data name="pingOver" xml:space="preserve">
    <value>ping sopra</value>
  </data>
  <data name="Port" xml:space="preserve">
    <value>Porta</value>
  </data>
  <data name="ProxiesDeletedSuccessfully" xml:space="preserve">
    <value>Proxy cancellati correttamente</value>
  </data>
  <data name="ProxiesImportedSuccessfully" xml:space="preserve">
    <value>Proxy importati correttamente</value>
  </data>
  <data name="proxiesMoved" xml:space="preserve">
    <value>proxy spostati</value>
  </data>
  <data name="ProxyGroup" xml:space="preserve">
    <value>Gruppo di Proxy</value>
  </data>
  <data name="ProxyGroupCreated" xml:space="preserve">
    <value>Il gruppo di proxy è stato creato con successo!</value>
  </data>
  <data name="ReallyDelete" xml:space="preserve">
    <value>Vuoi davvero cancellare</value>
  </data>
  <data name="results" xml:space="preserve">
    <value>risultati</value>
  </data>
  <data name="ResultsPerPage" xml:space="preserve">
    <value>Risultati per pagina</value>
  </data>
  <data name="SelectProxyGroup" xml:space="preserve">
    <value>Seleziona gruppo di proxy</value>
  </data>
  <data name="Slow" xml:space="preserve">
    <value>Lenti</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Stato</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Totale</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Tipo</value>
  </data>
  <data name="Uh-Oh" xml:space="preserve">
    <value>Uh-Oh</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="Working" xml:space="preserve">
    <value>Funzionanti</value>
  </data>
</root>
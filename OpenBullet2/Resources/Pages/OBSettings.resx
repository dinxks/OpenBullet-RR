<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AdminSessionLifetimeHours" xml:space="preserve">
    <value>Admin session lifetime (hours)</value>
  </data>
  <data name="AdminUsername" xml:space="preserve">
    <value>Admin username</value>
  </data>
  <data name="AllDone" xml:space="preserve">
    <value>All done</value>
  </data>
  <data name="AllowSystemWideFileAccess" xml:space="preserve">
    <value>Allow system-wide file access</value>
  </data>
  <data name="ApiKey" xml:space="preserve">
    <value>Api Key</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="AutoSetRecommendedBots" xml:space="preserve">
    <value>Automatically set the recommended bots when a config is selected in the job creation page</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="Customization" xml:space="preserve">
    <value>Customization</value>
  </data>
  <data name="CustomSnippets" xml:space="preserve">
    <value>Custom snippets (requires restart)</value>
  </data>
  <data name="CustomSnippetsDescription" xml:space="preserve">
    <value>These are custom snippets you can configure to get your own autocompletions in the LoliCode editor.</value>
  </data>
  <data name="DefaultAuthor" xml:space="preserve">
    <value>The default author on newly created configs</value>
  </data>
  <data name="DefaultJobDisplayMode" xml:space="preserve">
    <value>Default job display mode</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="EnableJobLogging" xml:space="preserve">
    <value>Enable logging in the job viewer page</value>
  </data>
  <data name="EnableWordWrap" xml:space="preserve">
    <value>Enable word wrap</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="GroupCapturesInDebugger" xml:space="preserve">
    <value>Group captures in debugger</value>
  </data>
  <data name="GuestSessionLifetimeHours" xml:space="preserve">
    <value>Guest session lifetime (hours)</value>
  </data>
  <data name="IgnoreWordlistNameOnHitsDedupe" xml:space="preserve">
    <value>Ignore the wordlist name when removing duplicates from hits</value>
  </data>
  <data name="JobManagerUpdateInterval" xml:space="preserve">
    <value>Job Manager update interval</value>
  </data>
  <data name="JobUpdateInterval" xml:space="preserve">
    <value>Job update interval</value>
  </data>
  <data name="LogMaxEntries" xml:space="preserve">
    <value>Maximum number of entries in the log</value>
  </data>
  <data name="LogToFile" xml:space="preserve">
    <value>Log to a file as well</value>
  </data>
  <data name="MonacoTheme" xml:space="preserve">
    <value>Monaco Editor Theme</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NavigateOnEdit" xml:space="preserve">
    <value>When editing a config, navigate to</value>
  </data>
  <data name="NewAdminPassword" xml:space="preserve">
    <value>New admin password</value>
  </data>
  <data name="NewPasswordSet" xml:space="preserve">
    <value>The new password was set!</value>
  </data>
  <data name="PlaySoundOnHit" xml:space="preserve">
    <value>Play sound on hit</value>
  </data>
  <data name="ProxyCheckTargets" xml:space="preserve">
    <value>Proxy Check Targets</value>
  </data>
  <data name="ProxyCheckTargetsDescription" xml:space="preserve">
    <value>These are the proxy targets available in a Proxy Check Job. The proxies will be checked against the target URL and if the success key is found in the downloaded source, the proxy will be marked as working.</value>
  </data>
  <data name="Remote" xml:space="preserve">
    <value>Remote</value>
  </data>
  <data name="RemoteConfigsEndpoints" xml:space="preserve">
    <value>Remote Configs Endpoints</value>
  </data>
  <data name="RemoteConfigsEndpointsDescription" xml:space="preserve">
    <value>These are the remote endpoints that will be queried upon reload of the config repository in order to get configs hosted on another machine.</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="RequireAdminLogin" xml:space="preserve">
    <value>Require admin login</value>
  </data>
  <data name="RestoreDefaults" xml:space="preserve">
    <value>Restore Defaults</value>
  </data>
  <data name="RestoreDefaultSettingsConfirmation" xml:space="preserve">
    <value>Do you want to restore the default settings?</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Saved" xml:space="preserve">
    <value>Saved</value>
  </data>
  <data name="Security" xml:space="preserve">
    <value>Security</value>
  </data>
  <data name="SettingsSaved" xml:space="preserve">
    <value>The settings were successfully saved.</value>
  </data>
  <data name="SuccessKey" xml:space="preserve">
    <value>Success Key</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="ThemeSuccessfullyUploaded" xml:space="preserve">
    <value>Theme successfully uploaded</value>
  </data>
  <data name="UnsupportedThemeFormat" xml:space="preserve">
    <value>Unsupported theme file format. Supported formats: .css, .zip</value>
  </data>
  <data name="UploadTheme" xml:space="preserve">
    <value>Upload theme</value>
  </data>
  <data name="URL" xml:space="preserve">
    <value>URL</value>
  </data>
  <data name="WarnConfigNotSaved" xml:space="preserve">
    <value>Show a warning when the currently loaded config was not saved and another one is loaded</value>
  </data>
</root>
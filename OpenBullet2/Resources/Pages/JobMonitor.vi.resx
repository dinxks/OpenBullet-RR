<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Actions" xml:space="preserve">
    <value>Hành động</value>
  </data>
  <data name="ActionsDescription" xml:space="preserve">
    <value>Executed sequentially</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="AliveProxies" xml:space="preserve">
    <value>Proxy sống</value>
  </data>
  <data name="BannedProxies" xml:space="preserve">
    <value>Proxy bị chặn</value>
  </data>
  <data name="Bans" xml:space="preserve">
    <value>Bans</value>
  </data>
  <data name="CaptchaCredit" xml:space="preserve">
    <value>Captcha credit</value>
  </data>
  <data name="CPM" xml:space="preserve">
    <value>Lượt check/phút</value>
  </data>
  <data name="Customs" xml:space="preserve">
    <value>Customs</value>
  </data>
  <data name="days" xml:space="preserve">
    <value>Ngày</value>
  </data>
  <data name="EditAction" xml:space="preserve">
    <value>Chỉnh sửa hành động</value>
  </data>
  <data name="EditTrigger" xml:space="preserve">
    <value>Edit Trigger</value>
  </data>
  <data name="Errors" xml:space="preserve">
    <value>Lỗi</value>
  </data>
  <data name="Executing" xml:space="preserve">
    <value>Đang thực thi</value>
  </data>
  <data name="Executions" xml:space="preserve">
    <value>Thực thi</value>
  </data>
  <data name="Fails" xml:space="preserve">
    <value>Fails</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>Nó hoạt động như thế nào?</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>Đây là %Trình giám sát Tác vụ%, nó chưa một danh sách %triggered actions%. Triggered Actions có nhiệm vụ giám sát một tác vụ, kiểm tra để thực hiện các hành động. Trước tiên bạn nên khai báo %id% của tác vụ cần giám sát trong hộp văn bản số. Nhớ bỏ chọn hộp đánh dấu %active% khi cài đặt triggers và các hành động để tránh việc tình cờ thực hiện chúng khi chúng chưa được hoàn thành.</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>Sau đó, bạn nên thêm một vài %triggers% và %các hành đống%. Một khi điều kiện được kích hoạt, Trình giám sát Tác vụ sẽ thực hiện tất cả các %hành động% mà bạn đã xác định với thứ tự nối tiếp cho tới khi chúng cạn kiệt. Sau khi thực hiện xong các hành động, bộ đếm số lần %thực hiện% sẽ tăng lên. Nếu Triggered Action được cho là có thể lặp lại, triggers sẽ được hợp lại nhiều lần, nếu không thì the Triggered Action sẽ đặt chúng là không hoạt động và không bao giờ trigger lần nữa.</value>
  </data>
  <data name="Help1x03" xml:space="preserve">
    <value>Nút %Đặt lại% sẽ đặt lại một vài lần thực hiện thành 0. Triggered Actions được lưu trong file %triggeredActions.json%, nên nếu bạn muốn sao lưu chúng hoặc chuyển chúng tới phiên bản OB khác, bạn nên thử copy file này.</value>
  </data>
  <data name="Hits" xml:space="preserve">
    <value>Hits</value>
  </data>
  <data name="hours" xml:space="preserve">
    <value>Giờ</value>
  </data>
  <data name="inJob" xml:space="preserve">
    <value>trong tác vụ</value>
  </data>
  <data name="Job" xml:space="preserve">
    <value>Tác vụ</value>
  </data>
  <data name="JobFinished" xml:space="preserve">
    <value>Đã hoàn thành</value>
  </data>
  <data name="JobStatus" xml:space="preserve">
    <value>Trạng thái</value>
  </data>
  <data name="minutes" xml:space="preserve">
    <value>Phút</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Tạo mới</value>
  </data>
  <data name="onWebhook" xml:space="preserve">
    <value>on webhook</value>
  </data>
  <data name="Progress" xml:space="preserve">
    <value>Progress</value>
  </data>
  <data name="ReloadProxies" xml:space="preserve">
    <value>Tải lại proxy</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Xoá</value>
  </data>
  <data name="RemoveAll" xml:space="preserve">
    <value>Xoá tất cả</value>
  </data>
  <data name="Repeatable" xml:space="preserve">
    <value>Repeatable</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Đặt lại</value>
  </data>
  <data name="Retries" xml:space="preserve">
    <value>Retries</value>
  </data>
  <data name="seconds" xml:space="preserve">
    <value>Giây</value>
  </data>
  <data name="SelectActionType" xml:space="preserve">
    <value>Chọn kiểu hành động</value>
  </data>
  <data name="SelectTriggerType" xml:space="preserve">
    <value>Select trigger type</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Gửi</value>
  </data>
  <data name="SetBotsTo" xml:space="preserve">
    <value>Đặt bots thành</value>
  </data>
  <data name="SetRelativeTimeTo" xml:space="preserve">
    <value>Đặt thời gian thành</value>
  </data>
  <data name="StartJob" xml:space="preserve">
    <value>Chạy</value>
  </data>
  <data name="StopJob" xml:space="preserve">
    <value>Dừng</value>
  </data>
  <data name="Tested" xml:space="preserve">
    <value>Tested</value>
  </data>
  <data name="TimeElapsed" xml:space="preserve">
    <value>Thời gian trôi qua</value>
  </data>
  <data name="TimeRemaining" xml:space="preserve">
    <value>Thời gian còn lại</value>
  </data>
  <data name="ToChecks" xml:space="preserve">
    <value>To Checks</value>
  </data>
  <data name="Triggers" xml:space="preserve">
    <value>Triggers</value>
  </data>
  <data name="TriggersDescription" xml:space="preserve">
    <value>Tất cả phải được xác minh cùng một thời điểm</value>
  </data>
  <data name="Wait" xml:space="preserve">
    <value>Chờ</value>
  </data>
  <data name="inChat" xml:space="preserve">
    <value>in chat</value>
  </data>
  <data name="AbortJob" xml:space="preserve">
    <value>Huỷ bỏ tác vụ</value>
  </data>
</root>
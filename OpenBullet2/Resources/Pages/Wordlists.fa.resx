<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>اضافه کردن</value>
  </data>
  <data name="Added" xml:space="preserve">
    <value>اضافه شده</value>
  </data>
  <data name="AddedWordlist" xml:space="preserve">
    <value>کمبو لیست با موفقیت اضافه شد!</value>
  </data>
  <data name="AddWordlist" xml:space="preserve">
    <value>اضافه کردن کمبو لیست</value>
  </data>
  <data name="AlsoDeleteFile" xml:space="preserve">
    <value>فایل را نیز حذف کنید؟</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>مطمئنی؟</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>لغو</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>حذف</value>
  </data>
  <data name="DeleteFileText1" xml:space="preserve">
    <value>آیا می خواهید حذف کنید</value>
  </data>
  <data name="DeleteFileText2" xml:space="preserve">
    <value>از دیسک هم هست؟</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>ویرایش</value>
  </data>
  <data name="EditWordlist" xml:space="preserve">
    <value>ویرایش کمبو</value>
  </data>
  <data name="FileName" xml:space="preserve">
    <value>اسم فایل</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>این چطوری کار میکنه؟</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>در اینجا می توانید کمبو لیست را وارد کنید. اول از همه روی دکمه٪ Add٪ در بالا کلیک کنید. شما می توانید٪ Wordlist Type٪ (اطلاعات بیشتر در مورد این مورد بعدا) ،٪ Name٪ و٪ Purpose٪ را تعیین کنید. شما دو گزینه برای بارگذاری پرونده خود دارید. اولین گزینه این است که٪ آن را در سروری که نمونه OpenBullet2 را اجرا می کند بارگذاری کنید. اگر کمبو لیست در کلاینت٪ باشد که شما از طریق مرورگر از آنجا به OB2 دسترسی پیدا می کنید ، این روش ترجیحی است٪ ، اما OB2 در دستگاه دیگری میزبانی می شود. این روش اضافه کردن کمبو لیست برخی از هزینه های اضافی را اضافه می کند زیرا لیست واژه ها باید از طریق مرورگر بارگذاری شوند.</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>٪ اگر کمبو لیست روی سرور باشد ، به این معنی که شما می خواهید فایلی را از همان دستگاهی که OB2 در آن در حال اجرا است بازیابی کنید ، می توانید از گزینه٪ File System٪ استفاده کنید ، به شما این امکان را می دهد تا در جستجوی پوشه ها به صورت بصری مرور کنید پرونده مورد نظر شما توجه داشته باشید که برای دسترسی به مکانهایی که درایو خارج از فهرست کار فعلی OB2 هستند ، باید به گزینه های امنیتی OpenBullet بروید و اجازه دسترسی به پرونده در کل سیستم را بدهید.</value>
  </data>
  <data name="Help1x03" xml:space="preserve">
    <value>در مورد٪ Wordlist Type٪ ، انواع فهرست بندی شده در حال حاضر مشخص شده را در پرونده٪ UserData / Environment.ini٪ در فهرست OB2 خود پیدا خواهید کرد. هنگام راه اندازی OB2 ، انواع کمبو لیست بارگیری می شوند. می توانید این فایل را تغییر داده و انواع Wordlist را اضافه یا حذف یا تغییر دهید تا با قالب کمبو لیست خود مطابقت داشته باشد. می توانید اطلاعات بیشتر در مورد انواع لیست های ورد را در بخش راهنماهای انجمن رسمی مطالعه کنید.</value>
  </data>
  <data name="KeepFile" xml:space="preserve">
    <value>نه ، پرونده را نگه دارید</value>
  </data>
  <data name="Lines" xml:space="preserve">
    <value>خط ها</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>صبر کنید</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>اسم</value>
  </data>
  <data name="NoRecordsToDisplay" xml:space="preserve">
    <value>هیچ پرونده برای نمایش نیست</value>
  </data>
  <data name="NoWordlistSelected" xml:space="preserve">
    <value>ابتدا باید یک لیست کلمه انتخاب کنید</value>
  </data>
  <data name="Purpose" xml:space="preserve">
    <value>هدف</value>
  </data>
  <data name="ReallyDelete" xml:space="preserve">
    <value>آیا واقعاً می خواهید حذف کنید</value>
  </data>
  <data name="results" xml:space="preserve">
    <value>نتایج</value>
  </data>
  <data name="ResultsPerPage" xml:space="preserve">
    <value>نتایج در هر صفحه</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>تایپ</value>
  </data>
  <data name="Uh-Oh" xml:space="preserve">
    <value>اوه شت</value>
  </data>
  <data name="WordlistInUse" xml:space="preserve">
    <value>این کمبو لیست توسط یک کار در حال استفاده مورد استفاده قرار می گیرد ، لطفاً قبل از آن آن را لغو یا حذف کنید</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllDone" xml:space="preserve">
    <value>Все сделано!</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Вы уверены?</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Автор</value>
  </data>
  <data name="by" xml:space="preserve">
    <value>от</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="CannotDownloadRemoteConfig" xml:space="preserve">
    <value>Не удается скачать Конфигурацию для удалённого доступа</value>
  </data>
  <data name="CannotEditRemoteConfig" xml:space="preserve">
    <value>Невозможно отредактировать Конфигурацию для удалённого доступа </value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Категория</value>
  </data>
  <data name="ConfigReloadWarning" xml:space="preserve">
    <value>Это перезагрузит все Конфигурации заново, поэтому все несохраненные изменения будут утеряны. Вы хотите продолжить?</value>
  </data>
  <data name="ConfigsSuccessfullyUploaded" xml:space="preserve">
    <value>Конфигурации успешно загружены</value>
  </data>
  <data name="ConfigWarningMessage" xml:space="preserve">
    <value>ПРЕДУПРЕЖДЕНИЕ! Конфигурации содержат код C#, который выполняется без каких-либо автоматических проверок на вредоносное поведение. Вся ответственность за использование Конфигураций, созданных третьими лицами, лежит полностью на Вас. Если Вы не доверяете источнику, всегда проверяйте код LoliCode / C# перед запуском.</value>
  </data>
  <data name="CreationDate" xml:space="preserve">
    <value>Дата создания</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Удалить</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Загрузить</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Редактировать</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>Что такое Конфигурация?</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value> %Конфигурация% - это файл, содержащий инструкции для автоматизации определённых действий, как правило направленных в отношении веб-ресурсов. Конфигурации обычно содержат %метаданные% (такие как, название, имя автора и иконку), а также файлы %ReadMe%, инструкциями как использовать Конфигурацию или как работают определёные функции, а также функции которые могут находиться либо в кастомном %LoliCode% или в чистом %C#% коде. На диске Конфиги сохраняются в виде файлов с расширением %*.opk% в подпапке %UserData/Configs%.</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>Конфигурации используются в таких заданиях, как %Задания Мульти Запуска%, для параллельного выполнения некоторых действий для определённого набора данных (к примеру, списка слов). Например, используются для проверки того, возвращают ли определенные поддирректории исследуемого веб-сайта допустимый ответ. Или их можно использовать для парсинга ссылок с нескольких страниц интернет-магазина..</value>
  </data>
  <data name="Help2x00" xml:space="preserve">
    <value>Как работает диспетчер Конфигураций?</value>
  </data>
  <data name="Help2x01" xml:space="preserve">
    <value>%Диспетчер Конфигураций% отслеживает все ваши конфигурации. Конфигурации загружаются из подпапки `UserData/Configs` при запуске программы OB2. При добавлении новых конфигураций, для их загрузки в программу, вы можете просто нажать %Перезагрузить%. Если у вас нет быстрого доступа к папке Configs (например, если OB2 работает на VPS), вы можете %Загрузить% необходимую конфигурацию в программу с помощью соответствующей кнопки. Таким же образом вы можете %Скачать% любой из уже загруженных конфигураций.</value>
  </data>
  <data name="Help2x02" xml:space="preserve">
    <value>Чтобы создать новую конфигурацию нажмите на кнопку %Новый%, которая расположена на верхней панели. Чтобы %отредактировать% Конфигурацию, достаточно нажать кнопку Правка, или с помощью двойного клика по файлу нужной Конфигурации в списке. Ещё есть кнопка %Вид% для изменения на более подробный вид сетки.</value>
  </data>
  <data name="Help3x00" xml:space="preserve">
    <value>Что такое файл *.opk?</value>
  </data>
  <data name="Help3x01" xml:space="preserve">
    <value>Файл %*.opk% представляет собой %ZIP-архив%, в котором содержатся следующие файлы:
    1. %Metadata.json% - файл содержит Название, Имя Автора и Иконку конфигурации. Иконка представляет собой изображение в кодировке base64, но также возможно ипользовать Иконки в формате GIF.
    2. %ReadMe.md% - файл, содержащий описание конфигурации, которое можно просмотреть при открытии меню выбора конфигураций во время настройки задания.
    3. %Settings.json% - содержит все настройки для конкретной Конфигурации.</value>
  </data>
  <data name="Help3x02" xml:space="preserve">
    <value>Ну и наконец, если в вашей Конфигурации используется Stacker, все инструкции будут сохранены в файле %script.loli%, как скрипт LoliCode. Но если хотите, чтобы ваша Конфигурация была только на чистом C#, будет создан содержащий исходный код C# файл с названием %script.cs%, который готов для копмиляции </value>
  </data>
  <data name="LastModified" xml:space="preserve">
    <value>Последнее изменение</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Загрузка</value>
  </data>
  <data name="LocalConfigs" xml:space="preserve">
    <value>Локальные Конфигурации</value>
  </data>
  <data name="MissingPlugin" xml:space="preserve">
    <value>Отсутствует подключаемый модуль</value>
  </data>
  <data name="MissingPluginText" xml:space="preserve">
    <value>Конфигурация была создана с помощью этого плагина, но он отсутствует</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Имя</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Новый</value>
  </data>
  <data name="NoConfigSelectedWarning" xml:space="preserve">
    <value>Похоже, вы не выбрали ни одной Конфигурации!</value>
  </data>
  <data name="Proxies" xml:space="preserve">
    <value>Прокси</value>
  </data>
  <data name="ReallyDelete" xml:space="preserve">
    <value>Вы действительно хотите удалить</value>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>Перезагрузить</value>
  </data>
  <data name="Remote" xml:space="preserve">
    <value>Удалённый</value>
  </data>
  <data name="RemoteConfig" xml:space="preserve">
    <value>Удалённая Конфигурация</value>
  </data>
  <data name="RemoteConfigs" xml:space="preserve">
    <value>Удалённые Конфигурации</value>
  </data>
  <data name="ToggleView" xml:space="preserve">
    <value>Переключить Вид</value>
  </data>
  <data name="Uh-Oh" xml:space="preserve">
    <value>Ой-Ой</value>
  </data>
  <data name="UnsavedChanges" xml:space="preserve">
    <value>Несохраненные Изменения</value>
  </data>
  <data name="UnsavedChangesText" xml:space="preserve">
    <value>В текущей конфигурации есть несохраненные изменения! Все равно продолжить?</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Загрузить</value>
  </data>
  <data name="WARNING" xml:space="preserve">
    <value>ПРЕДУПРЕЖДЕНИЕ</value>
  </data>
  <data name="Wordlists" xml:space="preserve">
    <value>Списки слов</value>
  </data>
</root>
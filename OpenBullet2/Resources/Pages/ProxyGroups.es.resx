<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddGroup" xml:space="preserve">
    <value>Agregar Grupo</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Todos</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>¿Estás seguro?</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>País</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Creado</value>
  </data>
  <data name="CreateProxyGroup" xml:space="preserve">
    <value>Crear grupo de proxy</value>
  </data>
  <data name="DeleteAllProxies" xml:space="preserve">
    <value>Eliminar todos los proxis</value>
  </data>
  <data name="Deleted" xml:space="preserve">
    <value>Eliminado</value>
  </data>
  <data name="DeleteGroup" xml:space="preserve">
    <value>Eliminar Grupo</value>
  </data>
  <data name="DeleteNotWorking" xml:space="preserve">
    <value>Eliminar no funcionales</value>
  </data>
  <data name="DeleteSlow" xml:space="preserve">
    <value>Eliminar lentos</value>
  </data>
  <data name="DeleteUntested" xml:space="preserve">
    <value>Eliminar no probados</value>
  </data>
  <data name="EditGroup" xml:space="preserve">
    <value>Editar Grupo</value>
  </data>
  <data name="EditProxyGroup" xml:space="preserve">
    <value>Editar grupo de proxy</value>
  </data>
  <data name="ForThisGroup" xml:space="preserve">
    <value>Para este grupo</value>
  </data>
  <data name="GroupInUse" xml:space="preserve">
    <value>Grupo en uso</value>
  </data>
  <data name="GroupInUseWarning" xml:space="preserve">
    <value>Actualmente, una tarea está utilizando este grupo de proxy. Detenga y elimine la tarea del administrador y vuelva a intentarlo.</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>¿Cómo funciona esto?</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>Aquí puede importar sus proxis en varios %groups%. Los grupos ayudan a mantener organizados los proxis y le brindan la capacidad de utilizar diferentes proxis para diferentes tareas. En primer lugar, debe crear un grupo haciendo clic en el botón %Agregar grupo% de arriba. Solo asígnele un nombre. Asegúrese de que su nuevo grupo esté seleccionado y luego haga clic en %Importar Proxis%.</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>El menú %Importar proxis% le dará 3 formas de importar sus proxis. Puede %pegarlos%, %cargar un archivo% ó %escribir la URL% de un recurso remoto que proporciona proxis en formato de texto (generalmente uno por línea). También puede especificar el %tipo%, %usuario% y %contraseña% predeterminados para los proxis. Alternativamente, puede usar la %sintaxis avanzada% descrita en el formulario para especificar el tipo, el nombre de usuario y la contraseña por proxy.</value>
  </data>
  <data name="Help1x03" xml:space="preserve">
    <value>Ahora ya está todo listo y podrá seleccionar su grupo de proxy cuando cree ó edite una tarea. Puede crear una tarea de tipo %Verificar Proxy% para probar si sus proxis funcionan antes de usarlos. La tarea Verificar Proxy actualizará los campos %país%, %estado%, %ping% y %última fecha verificada% de sus proxis en la tabla de datos de esta página, para que luego pueda %eliminar% proxis que no funcionan o tienen un ping demasiado alto para sus necesidades. ¡Incluso puede decidir mantener solo los proxis de un país específico!</value>
  </data>
  <data name="Host" xml:space="preserve">
    <value>Host</value>
  </data>
  <data name="Imported" xml:space="preserve">
    <value>Importado</value>
  </data>
  <data name="ImportProxies" xml:space="preserve">
    <value>Importar Proxis</value>
  </data>
  <data name="LastChecked" xml:space="preserve">
    <value>Ultima verificación</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Cargando</value>
  </data>
  <data name="NoGroupSelected" xml:space="preserve">
    <value>Primero seleccione un grupo existente</value>
  </data>
  <data name="NoRecordsToDisplay" xml:space="preserve">
    <value>No hay registros para mostrar</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Contraseña</value>
  </data>
  <data name="Ping" xml:space="preserve">
    <value>Ping</value>
  </data>
  <data name="pingOver" xml:space="preserve">
    <value>ping mayor a</value>
  </data>
  <data name="Port" xml:space="preserve">
    <value>Puerto</value>
  </data>
  <data name="ProxiesDeletedSuccessfully" xml:space="preserve">
    <value>Proxis eliminadas exitosamente</value>
  </data>
  <data name="ProxiesImportedSuccessfully" xml:space="preserve">
    <value>Proxis importadas con éxito</value>
  </data>
  <data name="ProxyGroup" xml:space="preserve">
    <value>Grupo de Proxy</value>
  </data>
  <data name="ProxyGroupCreated" xml:space="preserve">
    <value>¡El grupo de proxy se creó correctamente!</value>
  </data>
  <data name="ReallyDelete" xml:space="preserve">
    <value>¿De verdad quieres eliminar?</value>
  </data>
  <data name="results" xml:space="preserve">
    <value>resultados</value>
  </data>
  <data name="ResultsPerPage" xml:space="preserve">
    <value>Resultados por pagina</value>
  </data>
  <data name="Slow" xml:space="preserve">
    <value>Lento</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Estado</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Tipo</value>
  </data>
  <data name="Uh-Oh" xml:space="preserve">
    <value>Uh-Oh</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Usuario</value>
  </data>
</root>
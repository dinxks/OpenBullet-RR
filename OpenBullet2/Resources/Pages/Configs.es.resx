<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllDone" xml:space="preserve">
    <value>¡Todo listo!</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>¿Estás seguro?</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Autor</value>
  </data>
  <data name="by" xml:space="preserve">
    <value>por</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="CannotDownloadRemoteConfig" xml:space="preserve">
    <value>No se puede descargar la configuración remota</value>
  </data>
  <data name="CannotEditRemoteConfig" xml:space="preserve">
    <value>No puede editar configuraciones remota</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Categoría</value>
  </data>
  <data name="ConfigReloadWarning" xml:space="preserve">
    <value>Esto volverá a cargar todas las configuraciones del disco, por lo que se perderán todos los cambios no guardados. ¿Quieres proceder?</value>
  </data>
  <data name="ConfigsSuccessfullyUploaded" xml:space="preserve">
    <value>Configuraciones subidas correctamente</value>
  </data>
  <data name="ConfigWarningMessage" xml:space="preserve">
    <value>¡ADVERTENCIA! Las configuraciones que contienen código C # que se ejecuta sin comprobaciones automáticas de comportamientos maliciosos. Si usa configuraciones hechas por terceros, es SU responsabilidad asegurarse de que las configuraciones hagan exactamente lo que se supone que deben hacer y que no suceda nada sospechoso. Siempre verifique el código LoliCode / C # usted mismo antes de ejecutarlos si no confía completamente en el origen.</value>
  </data>
  <data name="CreationDate" xml:space="preserve">
    <value>Fecha de creación</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Descargar</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>¿Qué es una configuración?</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>Una %Config% es un archivo que contiene instrucciones para automatizar ciertas acciones, generalmente hacia recursos web. Las configuraciones contienen algunos %metadatos% (como un nombre, un autor y un icono), un %léeme% con instrucciones sobre cómo usarlo o para qué sirve, algunos ajustes y luego instrucciones que pueden estar en %LoliCode% lenguaje personalizado de secuencias de comandos ó en %C #% puro. En el disco, las configuraciones se guardan como archivos con la extensión %.opk% en la subcarpeta %UserData/Configs%.</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>Las configuraciones se pueden utilizar en trabajos como %MultiRun Job% para ejecutar algunas instrucciones en un conjunto de datos determinado (por ejemplo, un diccionario) en paralelo. Por ejemplo, se pueden usar para verificar si ciertas sub-rutas de un sitio web determinado devuelven una respuesta válida, ó se pueden usar para extraer enlaces de varias páginas de una tienda en línea.</value>
  </data>
  <data name="Help2x00" xml:space="preserve">
    <value>¿Cómo funciona el Administrador de configuración?</value>
  </data>
  <data name="Help2x01" xml:space="preserve">
    <value>%Administrador de Config% realiza un seguimiento de todas sus configuraciones. Las configuraciones se cargan desde la subcarpeta `UserData/Configs` cuando se inicia OB2, y si se agregan algunas configuraciones nuevas a esa carpeta, simplemente puede presionar %Recargar% para comenzar el proceso de carga nuevamente. Si no tiene acceso fácil a la carpeta Configuraciones (por ejemplo, si OB2 se está ejecutando en un vps), puede %Cargar% una configuración con el botón relacionado. También puede %Descargar% configuraciones existentes de la misma manera.</value>
  </data>
  <data name="Help2x02" xml:space="preserve">
    <value>En la parte superior puede encontrar el botón %Nuevo% que creará una nueva configuración. Para %editar% una configuración, puede hacer clic en el botón Editar o hacer doble clic sobre la config en la lista de configuraciones. También hay un botón para %cambiar la vista% a una vista de cuadrícula más detallada.</value>
  </data>
  <data name="Help3x00" xml:space="preserve">
    <value>¿Qué es un archivo .opk?</value>
  </data>
  <data name="Help3x01" xml:space="preserve">
    <value>Un archivo %.opk% es un archivo %zip% que contiene algunos archivos en su interior. El primer archivo es %metadata.json%, que contiene el nombre, el autor y el icono de la configuración. El icono es una imagen codificada en base64 que también puede ser un GIF. El archivo %readme.md% contendrá una descripción de la configuración, que se le mostrará al usuario cuando abra el menú de selección de configuración durante el proceso de configuración de la tarea. Es compatible con el lenguaje de marcado. El archivo %settings.json% contendrá la configuración específica.</value>
  </data>
  <data name="Help3x02" xml:space="preserve">
    <value>Finalmente, si su configuración usa un apilador/staker, las instrucciones se guardarán como un script LoliCode dentro del archivo %script.loli%. Si, en cambio, decidió convertir su configuración a C # únicamente, se creará un archivo llamado %script.cs% con el código C # a ejecutar.</value>
  </data>
  <data name="LastModified" xml:space="preserve">
    <value>Última modificación</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Cargando</value>
  </data>
  <data name="LocalConfigs" xml:space="preserve">
    <value>Config local</value>
  </data>
  <data name="MissingPlugin" xml:space="preserve">
    <value>Falta complemento</value>
  </data>
  <data name="MissingPluginText" xml:space="preserve">
    <value>La configuración se creó con este complemento, pero falta</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Nuevo</value>
  </data>
  <data name="NoConfigSelectedWarning" xml:space="preserve">
    <value>Parece que no ha seleccionado ninguna configuración!</value>
  </data>
  <data name="Proxies" xml:space="preserve">
    <value>Proxis</value>
  </data>
  <data name="ReallyDelete" xml:space="preserve">
    <value>¿De verdad quieres eliminar?</value>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>Recargar</value>
  </data>
  <data name="Remote" xml:space="preserve">
    <value>Remota</value>
  </data>
  <data name="RemoteConfig" xml:space="preserve">
    <value>Config Remota</value>
  </data>
  <data name="RemoteConfigs" xml:space="preserve">
    <value>Configs Remotas</value>
  </data>
  <data name="ToggleView" xml:space="preserve">
    <value>Cambiar vista</value>
  </data>
  <data name="Uh-Oh" xml:space="preserve">
    <value>UH oh</value>
  </data>
  <data name="UnsavedChanges" xml:space="preserve">
    <value>Cambios no guardados</value>
  </data>
  <data name="UnsavedChangesText" xml:space="preserve">
    <value>¡La configuración actual tiene cambios sin guardar! ¿Desea continuar de todos modos?</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Subir</value>
  </data>
  <data name="WARNING" xml:space="preserve">
    <value>ADVERTENCIA</value>
  </data>
  <data name="Wordlists" xml:space="preserve">
    <value>Diccionarios</value>
  </data>
</root>
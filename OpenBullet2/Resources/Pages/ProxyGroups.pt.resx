<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddGroup" xml:space="preserve">
    <value>Adicionar grupo</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Todos</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Tem certeza?</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>País</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Criado</value>
  </data>
  <data name="CreateProxyGroup" xml:space="preserve">
    <value>Criar grupo proxy</value>
  </data>
  <data name="DeleteAllProxies" xml:space="preserve">
    <value>Apagar todos os proxies</value>
  </data>
  <data name="Deleted" xml:space="preserve">
    <value>Excluído</value>
  </data>
  <data name="DeleteGroup" xml:space="preserve">
    <value>Excluir Grupo</value>
  </data>
  <data name="DeleteNotWorking" xml:space="preserve">
    <value>A exclusão não esta funcionando</value>
  </data>
  <data name="DeleteSlow" xml:space="preserve">
    <value>Apagar Proxies Lerdas</value>
  </data>
  <data name="DeleteUntested" xml:space="preserve">
    <value>Excluir não testadas</value>
  </data>
  <data name="EditGroup" xml:space="preserve">
    <value>Editar Grupo</value>
  </data>
  <data name="EditProxyGroup" xml:space="preserve">
    <value>Editar grupo proxy</value>
  </data>
  <data name="ExportProxies" xml:space="preserve">
    <value>Exportar Proxies</value>
  </data>
  <data name="ForThisGroup" xml:space="preserve">
    <value>Para este grupo</value>
  </data>
  <data name="GroupInUse" xml:space="preserve">
    <value>Grupo em uso</value>
  </data>
  <data name="GroupInUseWarning" xml:space="preserve">
    <value>Um trabalho está usando este grupo proxy. Pare e remova o trabalho do gerenciador e tente novamente.</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>Como isso funciona?</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>Aqui você pode importar suas proxies em vários %grupos%. Grupos ajudam a manter as proxies organizadas e te dão a possibilidade de usar diferentes proxies para diferentes trabalhos. Primeiro de tudo, você deve criar um grupo clicando no botão de %Adicionar Grupo% acima. E depois dar um nome a ele. Tenha certeza que o novo grupo está selecionado e depois clique em %Importar Proxies%.</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>O menu de %Importar Proxies% te dará tres opções e modos de importar suas proxies. Você pode escolher entre %colar% elas, %enviar um arquivo% ou %digitar o URL% de um recurso remoto que irá fornecer as proxies em formato de texto (geralmente uma por linha). Você também pode especificar o %tipo%, %usuário% e %senha% padrão para as proxies. Alternativamente, você pode usar a %sintax avançada% descrita no campo para especificar o tipo, usuário e senha por proxy.</value>
  </data>
  <data name="Help1x03" xml:space="preserve">
    <value>Agora você está pronto e poderá selecionar o grupo de proxy quando for criar ou editar um trabalho. Você pode criar um trabalho de tipo %Checar Proxies% para testar se suas proxies estão funcionando antes de usá-las. O trabalho de checagem de proxies irá atualizar os campos de %país%, %status%, %ping% e %último teste% da sua proxy na tabela de dados dessa pagina para que você possa então %remover% proxies que não funcionam ou que tem um ping muito alto para suas necessidades. Você pode até decidir manter apenas as proxies de um país específico!</value>
  </data>
  <data name="Host" xml:space="preserve">
    <value>Host</value>
  </data>
  <data name="Imported" xml:space="preserve">
    <value>Importadas</value>
  </data>
  <data name="ImportProxies" xml:space="preserve">
    <value>Importar Proxies</value>
  </data>
  <data name="LastChecked" xml:space="preserve">
    <value>Último teste</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Carregando</value>
  </data>
  <data name="NoGroupSelected" xml:space="preserve">
    <value>Por favor selecione um grupo primeiro</value>
  </data>
  <data name="NoRecordsToDisplay" xml:space="preserve">
    <value>Sem registros para exibir</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Senha</value>
  </data>
  <data name="Ping" xml:space="preserve">
    <value>Ping</value>
  </data>
  <data name="pingOver" xml:space="preserve">
    <value>ping acima de</value>
  </data>
  <data name="Port" xml:space="preserve">
    <value>Porta</value>
  </data>
  <data name="ProxiesDeletedSuccessfully" xml:space="preserve">
    <value>Proxies deletadas com sucesso</value>
  </data>
  <data name="ProxiesImportedSuccessfully" xml:space="preserve">
    <value>Proxies importadas com sucesso</value>
  </data>
  <data name="ProxyGroup" xml:space="preserve">
    <value>Grupo de proxies</value>
  </data>
  <data name="ProxyGroupCreated" xml:space="preserve">
    <value>O grupo de proxies foi criado com sucesso!</value>
  </data>
  <data name="ReallyDelete" xml:space="preserve">
    <value>Você realmente quer deletar</value>
  </data>
  <data name="results" xml:space="preserve">
    <value>resultados</value>
  </data>
  <data name="ResultsPerPage" xml:space="preserve">
    <value>Resultados por pagina</value>
  </data>
  <data name="Slow" xml:space="preserve">
    <value>Lenta</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Tipo</value>
  </data>
  <data name="Uh-Oh" xml:space="preserve">
    <value>Uh-Oh</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Usuário</value>
  </data>
</root>
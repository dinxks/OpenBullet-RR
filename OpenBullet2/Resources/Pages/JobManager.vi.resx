<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Bots" xml:space="preserve">
    <value>Bots</value>
  </data>
  <data name="by" xml:space="preserve">
    <value>bởi</value>
  </data>
  <data name="Clone" xml:space="preserve">
    <value>Nhân bản</value>
  </data>
  <data name="Combinations" xml:space="preserve">
    <value>Kết hợp</value>
  </data>
  <data name="Config" xml:space="preserve">
    <value>Config</value>
  </data>
  <data name="CPM" xml:space="preserve">
    <value>Lươt check/phút</value>
  </data>
  <data name="Custom" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="DataPool" xml:space="preserve">
    <value>Nhóm dữ liệu</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Chỉnh sửa</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>Nó hoạt động như thế nào?</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>Đây là %Trình quản lý tác vụ, bạn có thể %tạo% các tác vụ mới, %chỉnh% hoặc %loại bỏ% %các tác vụ% hiện có và truy cập giao diện của một tác vụ nhất định. Để tạo tác vụ mới, click nút %Tạo% ở trên. Sau khi đã tạo vài tác vụ bạn có thể thấy tổng quan trạng thái của chúng trên trang này. Bạn cũng có thể tạo một tác vụ bằng cách tạo bản sao của cái hiện có để tiết kiệm thời gian.</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>Để truy cập vào giao diện của một tác vụ nhất định, bạn chỉ cần click vào nó! Nếu bạn muốn Trình quản lý cập nhật trạng thái của các tác vụ ít hơn để tiết kiệm băng thông, bạn có thể tìm lựa chọn %Thời gian Cập nhật của Trình quản lý Tác vụ% trong trang Cài đặt của OB.</value>
  </data>
  <data name="Hits" xml:space="preserve">
    <value>Hits</value>
  </data>
  <data name="Infinite" xml:space="preserve">
    <value>Vô hạn</value>
  </data>
  <data name="JobNotIdle" xml:space="preserve">
    <value>Tác vụ ko phản hồi</value>
  </data>
  <data name="JobNotIdleWarning" xml:space="preserve">
    <value>Vui lòng dừng hoặc hủy bỏ tác vụ trước khi xóa nó</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Tạo</value>
  </data>
  <data name="NoConfigSelected" xml:space="preserve">
    <value>Không có config nào đc chọn</value>
  </data>
  <data name="NotWorking" xml:space="preserve">
    <value>Không hoạt động</value>
  </data>
  <data name="Owner" xml:space="preserve">
    <value>Chủ sở hữu</value>
  </data>
  <data name="Progress" xml:space="preserve">
    <value>Progress</value>
  </data>
  <data name="Proxies" xml:space="preserve">
    <value>Proxy</value>
  </data>
  <data name="Range" xml:space="preserve">
    <value>Range</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Xoá</value>
  </data>
  <data name="RemoveAll" xml:space="preserve">
    <value>Xoá tất cả</value>
  </data>
  <data name="SelectJobType" xml:space="preserve">
    <value>Chọn loại tác vụ</value>
  </data>
  <data name="ToCheck" xml:space="preserve">
    <value>To check</value>
  </data>
  <data name="Wordlist" xml:space="preserve">
    <value>Danh sách tài khoản</value>
  </data>
  <data name="Working" xml:space="preserve">
    <value>Hoạt động</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllDone" xml:space="preserve">
    <value>Helemaal klaar!</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Weet je het zeker?</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Auteur</value>
  </data>
  <data name="by" xml:space="preserve">
    <value>door</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annuleer</value>
  </data>
  <data name="CannotDownloadRemoteConfig" xml:space="preserve">
    <value>Kan externe config niet downloaden</value>
  </data>
  <data name="CannotEditRemoteConfig" xml:space="preserve">
    <value>Kan externe config niet bewerken</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Categorie</value>
  </data>
  <data name="ConfigReloadWarning" xml:space="preserve">
    <value>Hierdoor worden alle configs opnieuw van de schijf geladen, zodat alle niet-opgeslagen wijzigingen verloren gaan. Wil je doorgaan?</value>
  </data>
  <data name="ConfigsSuccessfullyUploaded" xml:space="preserve">
    <value>Configs zijn geüpload</value>
  </data>
  <data name="ConfigWarningMessage" xml:space="preserve">
    <value>WAARSCHUWING! Configs bevatten C# -code die wordt uitgevoerd zonder automatische controles op kwaadaardig gedrag. Als u configs gebruikt die door derden zijn gemaakt, is het UW verantwoordelijkheid om ervoor te zorgen dat configs precies doen wat ze moeten doen en dat er niets verdachts aan de hand is. Controleer altijd zelf de LoliCode / C# -code voordat u ze uitvoert als u de oorsprong niet volledig vertrouwt.</value>
  </data>
  <data name="CreationDate" xml:space="preserve">
    <value>Aanmaakdatum</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Verwijder</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Downloaden</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Bewerk</value>
  </data>
  <data name="Help1x00" xml:space="preserve">
    <value>Wat is een config?</value>
  </data>
  <data name="Help1x01" xml:space="preserve">
    <value>Een %Config% is een bestand dat instructies bevat voor het automatiseren van bepaalde acties, meestal naar webbronnen. Configs bevatten een aantal %metadata% (zoals een naam, een auteur en een pictogram), een %leesmij% met instructies over hoe het te gebruiken of waar het voor is, enkele instellingen en vervolgens instructies die ofwel in de aangepaste %LoliCode% kunnen staan of in pure %C#%. Op de schijf worden configs opgeslagen als bestanden met de %.opk% extensie in de %UserData/Configs% submap.</value>
  </data>
  <data name="Help1x02" xml:space="preserve">
    <value>Configs kunnen worden gebruikt in taken zoals de %MultiRun Taak% om enkele instructies parallel uit te voeren op een gegeven dataset (bijv. Een wordlist). Ze kunnen bijvoorbeeld worden gebruikt om te controleren of bepaalde subpaden van een bepaalde website een geldig antwoord opleveren, of ze kunnen worden gebruikt om links van meerdere pagina's van een online winkel te schrapen.</value>
  </data>
  <data name="Help2x00" xml:space="preserve">
    <value>Hoe werkt de Config Manager?</value>
  </data>
  <data name="Help2x01" xml:space="preserve">
    <value>De %Config Manager% houdt al uw configs bij. Configs worden geladen vanuit de submap `UserData/Configs` wanneer OB2 opstart, en als er een aantal nieuwe configs aan die map worden toegevoegd, kunt u eenvoudig op %Herlaad% drukken om het laadproces opnieuw te starten. Als u geen gemakkelijke toegang heeft tot de map Configs (bijvoorbeeld als OB2 op een vps draait), kunt u een Config %Uploaden% met de gerelateerde knop. U kunt ook met %Downloaden% bestaande configs op dezelfde manier downloaden.</value>
  </data>
  <data name="Help2x02" xml:space="preserve">
    <value>Bovenaan vind je de %Nieuw% knop die een nieuwe config zal aanmaken. Om %een config% te editen, kunt u op de knop Bewerken klikken of dubbelklikken op de config in de lijst. Er is ook een knop om %de weergave% te wijzigen naar een meer gedetailleerde rasterweergave.</value>
  </data>
  <data name="Help3x00" xml:space="preserve">
    <value>Wat is een .opk-bestand?</value>
  </data>
  <data name="Help3x01" xml:space="preserve">
    <value>Een %.opk% -bestand is een %zip-archief% dat enkele bestanden erin bevat. Het eerste bestand is %metadata.json%, dat is de naam, auteur en het pictogram van de config. Het pictogram is een met base64 gecodeerde afbeelding die ook een GIF kan zijn. Het %readme.md% -bestand zal een beschrijving van de config bevatten, deze zal aan de gebruiker worden getoond wanneer ze het config selectiemenu openen tijdens het instellen van de taak. Het ondersteunt de markdown-taal. Het %settings.json% -bestand bevat de config-specifieke instellingen.</value>
  </data>
  <data name="Help3x02" xml:space="preserve">
    <value>Ten slotte, als u de config stapelaar gebruikt, worden de instructies opgeslagen als een LoliCode-script in het bestand %script.loli%. Als je in plaats daarvan hebt besloten om je config alleen naar C# te converteren, wordt een bestand met de naam %script.cs% gemaakt met de C#-code om uit te voeren.</value>
  </data>
  <data name="LastModified" xml:space="preserve">
    <value>Laatst gewijzigd</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Bezig met laden</value>
  </data>
  <data name="LocalConfigs" xml:space="preserve">
    <value>Lokale configs</value>
  </data>
  <data name="MissingPlugin" xml:space="preserve">
    <value>Ontbrekende plugin</value>
  </data>
  <data name="MissingPluginText" xml:space="preserve">
    <value>De config is gebouwd met deze plugin, maar deze ontbreekt</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Naam</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Nieuw</value>
  </data>
  <data name="NoConfigSelectedWarning" xml:space="preserve">
    <value>Het lijkt erop dat je geen config hebt geselecteerd!</value>
  </data>
  <data name="Proxies" xml:space="preserve">
    <value>Proxy's</value>
  </data>
  <data name="ReallyDelete" xml:space="preserve">
    <value>Wil je dit echt verwijderen?</value>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>Herlaad</value>
  </data>
  <data name="Remote" xml:space="preserve">
    <value>Externe</value>
  </data>
  <data name="RemoteConfig" xml:space="preserve">
    <value>Externe config</value>
  </data>
  <data name="RemoteConfigs" xml:space="preserve">
    <value>Externe configs</value>
  </data>
  <data name="ToggleView" xml:space="preserve">
    <value>Verander weergave</value>
  </data>
  <data name="Uh-Oh" xml:space="preserve">
    <value>Uh-Oh</value>
  </data>
  <data name="UnsavedChanges" xml:space="preserve">
    <value>Niet-opgeslagen wijzigingen</value>
  </data>
  <data name="UnsavedChangesText" xml:space="preserve">
    <value>De huidige config heeft niet-opgeslagen wijzigingen! Toch doorgaan?</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Uploaden</value>
  </data>
  <data name="WARNING" xml:space="preserve">
    <value>WAARSCHUWING</value>
  </data>
  <data name="Wordlists" xml:space="preserve">
    <value>Wordlists</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Abort" xml:space="preserve">
    <value>Termina</value>
  </data>
  <data name="Alive" xml:space="preserve">
    <value>Vivi</value>
  </data>
  <data name="Banned" xml:space="preserve">
    <value>Bannati</value>
  </data>
  <data name="BotLog" xml:space="preserve">
    <value>Log del bot</value>
  </data>
  <data name="BotLogCompiledConfigError" xml:space="preserve">
    <value>Il log dei bot non è disponibile per config compilate</value>
  </data>
  <data name="BotLogDisabledError" xml:space="preserve">
    <value>Il log dei bot era disabilitato nelle impostazioni, per favore abilitalo per poter vedere il log completo nelle hit successive</value>
  </data>
  <data name="Bots" xml:space="preserve">
    <value>Bots</value>
  </data>
  <data name="by" xml:space="preserve">
    <value>di</value>
  </data>
  <data name="CaptchaCredit" xml:space="preserve">
    <value>Credito captcha</value>
  </data>
  <data name="CapturedData" xml:space="preserve">
    <value>Dati catturati</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Cambia</value>
  </data>
  <data name="ChangingPleaseWait" xml:space="preserve">
    <value>Cambiando... attendere prego</value>
  </data>
  <data name="CombinationsText" xml:space="preserve">
    <value>Combinazioni di {0} con lunghezza {1}</value>
  </data>
  <data name="Config" xml:space="preserve">
    <value>Config</value>
  </data>
  <data name="Controls" xml:space="preserve">
    <value>Controlli</value>
  </data>
  <data name="CopyData" xml:space="preserve">
    <value>Copia dati</value>
  </data>
  <data name="CopyDataCapture" xml:space="preserve">
    <value>Copia dati + cattura</value>
  </data>
  <data name="CopyToClipboardFailed" xml:space="preserve">
    <value>Copia negli appunti fallita</value>
  </data>
  <data name="CopyToClipboardFailedMessage" xml:space="preserve">
    <value>La copia negli appunti è fallita. Nota: Se accedi a OB2 da remoto via HTTP (e non HTTPS) il browser bloccherà la copia per proteggerti da potenziali rischi.</value>
  </data>
  <data name="CPM" xml:space="preserve">
    <value>CPM</value>
  </data>
  <data name="Custom" xml:space="preserve">
    <value>Personalizzati</value>
  </data>
  <data name="CustomInput" xml:space="preserve">
    <value>Input personalizzato</value>
  </data>
  <data name="CustomWebhook" xml:space="preserve">
    <value>Webhook personalizzato</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>Dati</value>
  </data>
  <data name="Database" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="DataPool" xml:space="preserve">
    <value>Pool di dati</value>
  </data>
  <data name="DataStats" xml:space="preserve">
    <value>Statistiche dati</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="days" xml:space="preserve">
    <value>giorno/i</value>
  </data>
  <data name="Disabled" xml:space="preserve">
    <value>Disabilitato</value>
  </data>
  <data name="DiscordWebhook" xml:space="preserve">
    <value>Webhook discord</value>
  </data>
  <data name="EditBotsAmount" xml:space="preserve">
    <value>Modifica numero di bot</value>
  </data>
  <data name="Elapsed" xml:space="preserve">
    <value>Trascorso</value>
  </data>
  <data name="Errors" xml:space="preserve">
    <value>Errori</value>
  </data>
  <data name="ExecutionInfo" xml:space="preserve">
    <value>Informazioni di esecuzione</value>
  </data>
  <data name="Fails" xml:space="preserve">
    <value>Fail</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="FileSystem" xml:space="preserve">
    <value>File system</value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Gruppo</value>
  </data>
  <data name="HardStopMessage" xml:space="preserve">
    <value>Inviando il segnale di terminazione</value>
  </data>
  <data name="HitOutputs" xml:space="preserve">
    <value>Output delle hit</value>
  </data>
  <data name="Hits" xml:space="preserve">
    <value>Hits</value>
  </data>
  <data name="InfiniteDataPool" xml:space="preserve">
    <value>Pool di dati infinita</value>
  </data>
  <data name="Invalid" xml:space="preserve">
    <value>Non validi</value>
  </data>
  <data name="JobOptions" xml:space="preserve">
    <value>Opzioni del job</value>
  </data>
  <data name="LineCheckedMessage" xml:space="preserve">
    <value>Riga controllata ({0})({1}) con stato {2}</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Caricamento</value>
  </data>
  <data name="NoConfig" xml:space="preserve">
    <value>Nessuna config</value>
  </data>
  <data name="NoHitSelectedWarning" xml:space="preserve">
    <value>Devi prima selezionare una hit</value>
  </data>
  <data name="NoRecordsToDisplay" xml:space="preserve">
    <value>Nessun risultato</value>
  </data>
  <data name="OtherStats" xml:space="preserve">
    <value>Altre statistiche</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>Pausa</value>
  </data>
  <data name="PauseMessage" xml:space="preserve">
    <value>Inviando il segnale di pausa</value>
  </data>
  <data name="PausingMessage" xml:space="preserve">
    <value>Mettendo in pausa... per favore attendi che i task finiscano il loro lavoro</value>
  </data>
  <data name="Progress" xml:space="preserve">
    <value>Progresso</value>
  </data>
  <data name="Proxy" xml:space="preserve">
    <value>Proxy</value>
  </data>
  <data name="ProxyMode" xml:space="preserve">
    <value>Modalità proxy</value>
  </data>
  <data name="ProxySources" xml:space="preserve">
    <value>Fonti di proxy</value>
  </data>
  <data name="ProxyStats" xml:space="preserve">
    <value>Statistiche proxy</value>
  </data>
  <data name="RangeText" xml:space="preserve">
    <value>Intervallo da {0} con quantità {1} e incremento {2} (padding {3})</value>
  </data>
  <data name="RefreshList" xml:space="preserve">
    <value>Aggiorna lista</value>
  </data>
  <data name="Remaining" xml:space="preserve">
    <value>Rimanente</value>
  </data>
  <data name="Remote" xml:space="preserve">
    <value>Remoto</value>
  </data>
  <data name="Resume" xml:space="preserve">
    <value>Riprendi</value>
  </data>
  <data name="ResumeMessage" xml:space="preserve">
    <value>Riprendendo il controllo</value>
  </data>
  <data name="Retried" xml:space="preserve">
    <value>Riprovati</value>
  </data>
  <data name="SendToDebugger" xml:space="preserve">
    <value>Manda al debugger</value>
  </data>
  <data name="ShowFullLog" xml:space="preserve">
    <value>Mostra log completo</value>
  </data>
  <data name="Skip" xml:space="preserve">
    <value>Salta</value>
  </data>
  <data name="SkippedWait" xml:space="preserve">
    <value>Attesa saltata</value>
  </data>
  <data name="SkipWait" xml:space="preserve">
    <value>Salta Attesa</value>
  </data>
  <data name="SoftStopMessage" xml:space="preserve">
    <value>Inviando segnale di arresto dolce</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Avvia</value>
  </data>
  <data name="StartedChecking" xml:space="preserve">
    <value>Controllo iniziato</value>
  </data>
  <data name="StartedWaiting" xml:space="preserve">
    <value>Attesa iniziata</value>
  </data>
  <data name="StartingMessage" xml:space="preserve">
    <value>In fase di avvio...</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Arresta</value>
  </data>
  <data name="StoppingMessage" xml:space="preserve">
    <value>Arrestando... per favore attendi che i task finiscano il loro lavoro, altrimenti</value>
  </data>
  <data name="TaskError" xml:space="preserve">
    <value>Errore del task</value>
  </data>
  <data name="TaskManagerCompleted" xml:space="preserve">
    <value>Il task manager ha completato tutto il lavoro</value>
  </data>
  <data name="TaskManagerError" xml:space="preserve">
    <value>Errore del task manager!</value>
  </data>
  <data name="TaskManagerPaused" xml:space="preserve">
    <value>Il task manager è stato messo in pausa</value>
  </data>
  <data name="Tested" xml:space="preserve">
    <value>Testati</value>
  </data>
  <data name="TimeLeft" xml:space="preserve">
    <value>Tempo rimanente</value>
  </data>
  <data name="ToCheck" xml:space="preserve">
    <value>Da controllare</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Totale</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Tipo</value>
  </data>
  <data name="Uh-Oh" xml:space="preserve">
    <value>Uh-Oh</value>
  </data>
  <data name="Waiting" xml:space="preserve">
    <value>Aspettando</value>
  </data>
  <data name="WaitingForData" xml:space="preserve">
    <value>Aspettando i dati</value>
  </data>
  <data name="Wordlist" xml:space="preserve">
    <value>Wordlist</value>
  </data>
</root>